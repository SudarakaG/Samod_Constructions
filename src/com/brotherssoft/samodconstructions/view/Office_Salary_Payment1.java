/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brotherssoft.samodconstructions.view;

import com.brotherssoft.samodconstructions.controller.M_EmployeeController;
import com.brotherssoft.samodconstructions.controller.T_AttendanceController;
import com.brotherssoft.samodconstructions.controller.T_SalaryController;
import com.brotherssoft.samodconstructions.model.M_Employee;
import com.brotherssoft.samodconstructions.model.T_Attendance;
import com.brotherssoft.samodconstructions.model.T_Salary;
import com.brotherssoft.samodconstructions.serverconnector.ServerConnector;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akvasoft
 */
public class Office_Salary_Payment1 extends javax.swing.JPanel {

    M_EmployeeController employeeController;
    T_AttendanceController attendanceController;
    T_SalaryController salaryController;

    DefaultTableModel dtmEmp;
    DefaultTableModel dtmPendingSal;

    List<T_Salary> officeEmpSalaryList;
    T_Salary officeSalGlob = null;

    DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

    /**
     * Creates new form Office_Salary_Payment
     */
    public Office_Salary_Payment1() throws Exception {
        initComponents();

        Meterial_Allocation_Panel1.setVisible(true);
        Meterial_Allocation_Panel.setVisible(false);

        from_date.setFormats("yyyy-MM-dd", "yyyy/MM/dd");
        to_date.setFormats("yyyy-MM-dd", "yyyy/MM/dd");
        btnSubmit.setEnabled(false);
        btn_process.setEnabled(false);

        employeeController = ServerConnector.getServerConnetor().getEmployeeController();
        attendanceController = ServerConnector.getServerConnetor().getAttendanceController();
        salaryController = ServerConnector.getServerConnetor().getSalaryController();

        dtmEmp = (DefaultTableModel) tblEmp.getModel();
        dtmPendingSal = (DefaultTableModel) tblPendingSal.getModel();

        officeEmpSalaryList = new ArrayList<>();

        loadEmpCombo();
        laodPendingSalTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Meterial_Allocation_Panel = new javax.swing.JPanel();
        user_panel_hedding4 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jSeparator16 = new javax.swing.JSeparator();
        txt_Input_Panel_Branch4 = new javax.swing.JPanel();
        jLabel133 = new javax.swing.JLabel();
        from_date = new org.jdesktop.swingx.JXDatePicker();
        btn_process = new javax.swing.JButton();
        jLabel134 = new javax.swing.JLabel();
        to_date = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDays = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBasic = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAllo1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAllo2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAllo3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAllo4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtOt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAdvance = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTotAdd = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTotDed = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtGross = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNet = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        txtAddition = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDeduction = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        addedDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel15 = new javax.swing.JLabel();
        cmbAddedEmp = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        btnToPending = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        Meterial_Allocation_Panel1 = new javax.swing.JPanel();
        user_panel_hedding6 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jSeparator18 = new javax.swing.JSeparator();
        txt_Input_Panel_Branch5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPendingSal = new javax.swing.JTable();
        btnToPending1 = new javax.swing.JButton();

        Meterial_Allocation_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Meterial_Allocation_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        user_panel_hedding4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel68.setBackground(new java.awt.Color(255, 255, 255));
        jLabel68.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("Administrations / System Management / Operations /");

        jLabel71.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Office Salary Payment");

        jSeparator16.setBackground(new java.awt.Color(204, 0, 51));
        jSeparator16.setOpaque(true);

        javax.swing.GroupLayout user_panel_hedding4Layout = new javax.swing.GroupLayout(user_panel_hedding4);
        user_panel_hedding4.setLayout(user_panel_hedding4Layout);
        user_panel_hedding4Layout.setHorizontalGroup(
            user_panel_hedding4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(509, Short.MAX_VALUE))
            .addGroup(user_panel_hedding4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel71)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator16))
        );
        user_panel_hedding4Layout.setVerticalGroup(
            user_panel_hedding4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(user_panel_hedding4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71)
                    .addComponent(jSeparator16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        txt_Input_Panel_Branch4.setBackground(new java.awt.Color(255, 255, 255));
        txt_Input_Panel_Branch4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salary Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel133.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel133.setText("From Date");

        from_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_dateActionPerformed(evt);
            }
        });

        btn_process.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_process.setForeground(new java.awt.Color(255, 0, 51));
        btn_process.setText("Process");
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });

        jLabel134.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel134.setText("To Date");

        to_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_dateActionPerformed(evt);
            }
        });
        to_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                to_datePropertyChange(evt);
            }
        });

        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee Name", "NIC"
            }
        ));
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEmp);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Attended Days");

        txtDays.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Basic");

        txtBasic.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Allowance 1");

        txtAllo1.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Allowance 2");

        txtAllo2.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Allowance 3");

        txtAllo3.setEditable(false);
        txtAllo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAllo3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Allowance 4");

        txtAllo4.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("OT");

        txtOt.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Advance");

        txtAdvance.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Total Addition");

        txtTotAdd.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Total Deduction");

        txtTotDed.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Gross Salary");

        txtGross.setEditable(false);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Net Salary");

        txtNet.setEditable(false);

        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtAddition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdditionActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("+");
        jLabel13.setPreferredSize(new java.awt.Dimension(13, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("+");
        jLabel14.setPreferredSize(new java.awt.Dimension(13, 20));

        txtDeduction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeductionActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 0, 0));
        jLabel17.setText("* Check Details & Click on \"Submit\" Button for Each Employee  ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDays)
                            .addComponent(txtBasic)
                            .addComponent(txtAllo1)
                            .addComponent(txtAllo2)
                            .addComponent(txtAllo3)
                            .addComponent(txtAllo4)
                            .addComponent(txtGross)
                            .addComponent(txtOt)
                            .addComponent(txtAdvance)
                            .addComponent(txtNet)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTotDed)
                                    .addComponent(txtTotAdd))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAddition, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btnSubmit)
                        .addGap(48, 48, 48))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBasic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAllo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAllo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAllo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAllo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtGross, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtOt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtTotAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(txtDeduction)
                    .addComponent(txtTotDed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addedDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addedDateActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Added Date");

        cmbAddedEmp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbAddedEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select the Added Employee -" }));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Added By");

        btnToPending.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnToPending.setText("To Pending List");
        btnToPending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToPendingActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("* After Submit Every Employee's Salary, Select Authority & Click \"Process\"");

        javax.swing.GroupLayout txt_Input_Panel_Branch4Layout = new javax.swing.GroupLayout(txt_Input_Panel_Branch4);
        txt_Input_Panel_Branch4.setLayout(txt_Input_Panel_Branch4Layout);
        txt_Input_Panel_Branch4Layout.setHorizontalGroup(
            txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel134, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(to_date, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGap(387, 387, 387)
                        .addComponent(btnToPending))
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbAddedEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addedDate, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_process, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        txt_Input_Panel_Branch4Layout.setVerticalGroup(
            txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel134, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnToPending))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_process, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbAddedEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        txt_Input_Panel_Branch4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {from_date, to_date});

        javax.swing.GroupLayout Meterial_Allocation_PanelLayout = new javax.swing.GroupLayout(Meterial_Allocation_Panel);
        Meterial_Allocation_Panel.setLayout(Meterial_Allocation_PanelLayout);
        Meterial_Allocation_PanelLayout.setHorizontalGroup(
            Meterial_Allocation_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(user_panel_hedding4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Meterial_Allocation_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_Input_Panel_Branch4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        Meterial_Allocation_PanelLayout.setVerticalGroup(
            Meterial_Allocation_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Meterial_Allocation_PanelLayout.createSequentialGroup()
                .addComponent(user_panel_hedding4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_Input_Panel_Branch4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Meterial_Allocation_Panel1.setBackground(new java.awt.Color(255, 255, 255));
        Meterial_Allocation_Panel1.setPreferredSize(new java.awt.Dimension(1050, 710));

        user_panel_hedding6.setBackground(new java.awt.Color(0, 153, 153));

        jLabel70.setBackground(new java.awt.Color(255, 255, 255));
        jLabel70.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("Administrations / System Management / Operations /");

        jLabel73.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(255, 255, 255));
        jLabel73.setText("Office Salary Payment");

        jSeparator18.setBackground(new java.awt.Color(204, 0, 51));
        jSeparator18.setOpaque(true);

        javax.swing.GroupLayout user_panel_hedding6Layout = new javax.swing.GroupLayout(user_panel_hedding6);
        user_panel_hedding6.setLayout(user_panel_hedding6Layout);
        user_panel_hedding6Layout.setHorizontalGroup(
            user_panel_hedding6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(509, Short.MAX_VALUE))
            .addGroup(user_panel_hedding6Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel73)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator18))
        );
        user_panel_hedding6Layout.setVerticalGroup(
            user_panel_hedding6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(user_panel_hedding6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel73)
                    .addComponent(jSeparator18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        txt_Input_Panel_Branch5.setBackground(new java.awt.Color(255, 255, 255));
        txt_Input_Panel_Branch5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salary Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tblPendingSal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee Name", "NIC"
            }
        ));
        tblPendingSal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPendingSalMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPendingSal);

        btnToPending1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnToPending1.setText("NEW SALARY");
        btnToPending1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToPending1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txt_Input_Panel_Branch5Layout = new javax.swing.GroupLayout(txt_Input_Panel_Branch5);
        txt_Input_Panel_Branch5.setLayout(txt_Input_Panel_Branch5Layout);
        txt_Input_Panel_Branch5Layout.setHorizontalGroup(
            txt_Input_Panel_Branch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_Input_Panel_Branch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(txt_Input_Panel_Branch5Layout.createSequentialGroup()
                        .addComponent(btnToPending1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        txt_Input_Panel_Branch5Layout.setVerticalGroup(
            txt_Input_Panel_Branch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnToPending1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Meterial_Allocation_Panel1Layout = new javax.swing.GroupLayout(Meterial_Allocation_Panel1);
        Meterial_Allocation_Panel1.setLayout(Meterial_Allocation_Panel1Layout);
        Meterial_Allocation_Panel1Layout.setHorizontalGroup(
            Meterial_Allocation_Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(user_panel_hedding6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Meterial_Allocation_Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_Input_Panel_Branch5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        Meterial_Allocation_Panel1Layout.setVerticalGroup(
            Meterial_Allocation_Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Meterial_Allocation_Panel1Layout.createSequentialGroup()
                .addComponent(user_panel_hedding6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_Input_Panel_Branch5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(Meterial_Allocation_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Meterial_Allocation_Panel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1072, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Meterial_Allocation_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Meterial_Allocation_Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1442, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Meterial_Allocation_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(Meterial_Allocation_Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void from_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_dateActionPerformed

    }//GEN-LAST:event_from_dateActionPerformed

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed
        tranferSalaryDetails();
    }//GEN-LAST:event_btn_processActionPerformed

    private void to_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_dateActionPerformed
        loadEmpTable();
    }//GEN-LAST:event_to_dateActionPerformed

    private void txtAllo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAllo3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAllo3ActionPerformed

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        loadEmpSalaryDetails();
    }//GEN-LAST:event_tblEmpMouseClicked

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        submitSalaryDetails();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtAdditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdditionActionPerformed
        if (!"".equals(txtAddition.getText())) {
            txtNet.setText(decimalFormat.format(Double.parseDouble(txtNet.getText().replaceAll(",", "")) + Double.parseDouble(txtAddition.getText().replaceAll(",", ""))));
        }
    }//GEN-LAST:event_txtAdditionActionPerformed

    private void txtDeductionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeductionActionPerformed
        if (!"".equals(txtDeduction.getText())) {
            txtNet.setText(decimalFormat.format(Double.parseDouble(txtNet.getText().replaceAll(",", "")) - Double.parseDouble(txtDeduction.getText().replaceAll(",", ""))));
        }
    }//GEN-LAST:event_txtDeductionActionPerformed

    private void addedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addedDateActionPerformed
        btn_process.setEnabled(true);
    }//GEN-LAST:event_addedDateActionPerformed

    private void btnToPendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToPendingActionPerformed
        Meterial_Allocation_Panel1.setVisible(true);
        Meterial_Allocation_Panel.setVisible(false);
        laodPendingSalTable();
    }//GEN-LAST:event_btnToPendingActionPerformed

    private void tblPendingSalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPendingSalMouseClicked
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        int selRow = tblPendingSal.getSelectedRow();
        try {
            Date from = simpleDateFormat.parse(dtmPendingSal.getValueAt(selRow, 0).toString());
            Date to = simpleDateFormat.parse(dtmPendingSal.getValueAt(selRow, 1).toString());
            from_date.setDate(from);
            to_date.setDate(to);
            Meterial_Allocation_Panel.setVisible(true);
            Meterial_Allocation_Panel1.setVisible(false);
            btn_process.setText("Update");

            List<T_Salary> allSalaries = salaryController.getAllSalaries(from, to);
            int addedEmp = 0;
            Date addedDate2 = null;
            for (T_Salary allSalary : allSalaries) {
                addedEmp = allSalary.getSalary_enteredUser();
                addedDate2 = allSalary.getSalary_enteredDate();
                break;
            }
            for (int i = 1; i < cmbAddedEmp.getItemCount(); i++) {
                if (Integer.parseInt(cmbAddedEmp.getItemAt(i).toString().split(" : ")[0]) == addedEmp) {
                    cmbAddedEmp.setSelectedIndex(i);
                    break;
                } else {
                    cmbAddedEmp.setSelectedIndex(0);
                }
            }
            addedDate.setDate(addedDate2);
            
            btn_process.setEnabled(true);

        } catch (ParseException ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblPendingSalMouseClicked

    private void btnToPending1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToPending1ActionPerformed
        Meterial_Allocation_Panel1.setVisible(false);
        Meterial_Allocation_Panel.setVisible(true);
        clearFields();
        clearSubmitFields();
    }//GEN-LAST:event_btnToPending1ActionPerformed

    private void to_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_to_datePropertyChange
        if (from_date.getDate() != null && to_date.getDate() != null) {
            loadEmpTable();
        }
    }//GEN-LAST:event_to_datePropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Meterial_Allocation_Panel;
    private javax.swing.JPanel Meterial_Allocation_Panel1;
    private org.jdesktop.swingx.JXDatePicker addedDate;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnToPending;
    private javax.swing.JButton btnToPending1;
    private javax.swing.JButton btn_process;
    private javax.swing.JComboBox<String> cmbAddedEmp;
    private org.jdesktop.swingx.JXDatePicker from_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JTable tblEmp;
    private javax.swing.JTable tblPendingSal;
    private org.jdesktop.swingx.JXDatePicker to_date;
    private javax.swing.JTextField txtAddition;
    private javax.swing.JTextField txtAdvance;
    private javax.swing.JTextField txtAllo1;
    private javax.swing.JTextField txtAllo2;
    private javax.swing.JTextField txtAllo3;
    private javax.swing.JTextField txtAllo4;
    private javax.swing.JTextField txtBasic;
    private javax.swing.JTextField txtDays;
    private javax.swing.JTextField txtDeduction;
    private javax.swing.JTextField txtGross;
    private javax.swing.JTextField txtNet;
    private javax.swing.JTextField txtOt;
    private javax.swing.JTextField txtTotAdd;
    private javax.swing.JTextField txtTotDed;
    private javax.swing.JPanel txt_Input_Panel_Branch4;
    private javax.swing.JPanel txt_Input_Panel_Branch5;
    private javax.swing.JPanel user_panel_hedding4;
    private javax.swing.JPanel user_panel_hedding6;
    // End of variables declaration//GEN-END:variables

    private void loadEmpTable() {
        dtmEmp.setRowCount(0);
        officeEmpSalaryList = new ArrayList<>();
        try {
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                if (allLastAddedEmployee.getEmp_jobType_id() == 1) {
                    String[] rowData = {allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_initials() + " " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName(), allLastAddedEmployee.getEmp_NIC()};
                    dtmEmp.addRow(rowData);
                    T_Salary offSal = new T_Salary();
                    offSal.setSalary_employeeId(allLastAddedEmployee.getEmp_id());
                    offSal.setSalary_basic(allLastAddedEmployee.getEmp_salary());
                    offSal.setSalary_otherAllowance1(allLastAddedEmployee.getEmp_otherAllowance1());
                    offSal.setSalary_otherAllowance2(allLastAddedEmployee.getEmp_otherAllowance2());
                    offSal.setSalary_otherAllowance3(allLastAddedEmployee.getEmp_otherAllowance3());
                    offSal.setSalary_otherAllowance4(allLastAddedEmployee.getEmp_otherAllowance4());
                    offSal.setSalary_gross(allLastAddedEmployee.getEmp_salary() + allLastAddedEmployee.getEmp_otherAllowance1() + allLastAddedEmployee.getEmp_otherAllowance2() + allLastAddedEmployee.getEmp_otherAllowance3() + allLastAddedEmployee.getEmp_otherAllowance4());

                    officeEmpSalaryList.add(offSal);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadEmpSalaryDetails() {
        try {
            int selRow = tblEmp.getSelectedRow();
            int empId = Integer.parseInt(dtmEmp.getValueAt(selRow, 0).toString().split(" : ")[0]);
            officeSalGlob = new T_Salary();
            T_Salary searchSalaryDetails = salaryController.searchSalaryDetails(from_date.getDate(), to_date.getDate(), empId);
            if (searchSalaryDetails == null) {
                List<T_Salary> officeEmpSalaryList1 = officeEmpSalaryList;
                for (T_Salary t_Salary : officeEmpSalaryList1) {
                    if (t_Salary.getSalary_employeeId() == empId) {
                        officeSalGlob = t_Salary;
                        break;
                    }
                }

                List<T_Attendance> allAttendances = attendanceController.getAllAttendances(from_date.getDate(), to_date.getDate());
                double days = 0;
                double ot = 0;
                double advance = 0;

                for (T_Attendance allAttendance : allAttendances) {
                    if (allAttendance.getAttendance_employeeId() == empId) {
                        days = days + allAttendance.getAttendance_days();
                        ot = ot + (allAttendance.getAttendance_ot() * allAttendance.getAttendance_otRate());
                        advance = advance + allAttendance.getAttendance_advance();
                    }
                }

                txtDays.setText(decimalFormat.format(days));
                txtBasic.setText(decimalFormat.format(officeSalGlob.getSalary_basic()));
                txtAllo1.setText(decimalFormat.format(officeSalGlob.getSalary_otherAllowance1()));
                txtAllo2.setText(decimalFormat.format(officeSalGlob.getSalary_otherAllowance2()));
                txtAllo3.setText(decimalFormat.format(officeSalGlob.getSalary_otherAllowance3()));
                txtAllo4.setText(decimalFormat.format(officeSalGlob.getSalary_otherAllowance4()));
                txtGross.setText(decimalFormat.format(officeSalGlob.getSalary_gross()));
                txtOt.setText(decimalFormat.format(ot));
                txtAdvance.setText(decimalFormat.format(advance));
                txtTotAdd.setText(decimalFormat.format(ot));
                txtTotDed.setText(decimalFormat.format(advance));
                txtNet.setText(decimalFormat.format(Double.parseDouble(txtGross.getText().replaceAll(",", "")) + Double.parseDouble(txtTotAdd.getText().replaceAll(",", "")) - Double.parseDouble(txtTotDed.getText().replaceAll(",", ""))));
                btnSubmit.setEnabled(true);
                tblEmp.setEnabled(false);
            } else {
                officeSalGlob = searchSalaryDetails;
                List<T_Attendance> allAttendances = attendanceController.getAllAttendances(from_date.getDate(), to_date.getDate());
                double days = 0;
                double ot = 0;
                double advance = 0;

                for (T_Attendance allAttendance : allAttendances) {
                    if (allAttendance.getAttendance_employeeId() == empId) {
                        days = days + allAttendance.getAttendance_days();
                        ot = ot + (allAttendance.getAttendance_ot() * allAttendance.getAttendance_otRate());
                        advance = advance + allAttendance.getAttendance_advance();
                    }
                }
                txtDays.setText(decimalFormat.format(days));
                txtBasic.setText(decimalFormat.format(searchSalaryDetails.getSalary_basic()));
                txtAllo1.setText(decimalFormat.format(searchSalaryDetails.getSalary_otherAllowance1()));
                txtAllo2.setText(decimalFormat.format(searchSalaryDetails.getSalary_otherAllowance2()));
                txtAllo3.setText(decimalFormat.format(searchSalaryDetails.getSalary_otherAllowance3()));
                txtAllo4.setText(decimalFormat.format(searchSalaryDetails.getSalary_otherAllowance4()));
                txtGross.setText(decimalFormat.format(searchSalaryDetails.getSalary_gross()));
                txtOt.setText(decimalFormat.format(ot));
                txtAdvance.setText(decimalFormat.format(advance));
                txtTotAdd.setText(decimalFormat.format(searchSalaryDetails.getSalary_addition()));
                txtTotDed.setText(decimalFormat.format(searchSalaryDetails.getSalary_totalDeduction() - searchSalaryDetails.getSalary_deduction()));
                txtDeduction.setText(decimalFormat.format(searchSalaryDetails.getSalary_deduction()));
                txtNet.setText(decimalFormat.format(Double.parseDouble(txtGross.getText().replaceAll(",", "")) + Double.parseDouble(txtTotAdd.getText().replaceAll(",", "")) - Double.parseDouble(txtTotDed.getText().replaceAll(",", "")) - Double.parseDouble(txtDeduction.getText().replaceAll(",", ""))));
                btnSubmit.setEnabled(true);
                tblEmp.setEnabled(false);
            }

        } catch (Exception ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void submitSalaryDetails() {
        double ot = Double.parseDouble(txtOt.getText().replaceAll(",", ""));
        double advance = Double.parseDouble(txtAdvance.getText().replaceAll(",", ""));
        double add = 0;
        if (!"".equals(txtAddition.getText())) {
            add = Double.parseDouble(txtAddition.getText().replaceAll(",", ""));
        }
        double totAdd = Double.parseDouble(txtTotAdd.getText().replaceAll(",", "")) + add;
        double ded = 0;
        if (!"".equals(txtDeduction.getText())) {
            ded = Double.parseDouble(txtDeduction.getText().replaceAll(",", ""));
        }
        double totDed = Double.parseDouble(txtTotDed.getText().replaceAll(",", "")) + ded;
        double netSal = Double.parseDouble(txtNet.getText().replaceAll(",", ""));

        officeSalGlob.setSalary_ot(ot);
        officeSalGlob.setSalary_advace(advance);
        officeSalGlob.setSalary_addition(totAdd);
        officeSalGlob.setSalary_deduction(ded);
        officeSalGlob.setSalary_totalDeduction(totDed);
        officeSalGlob.setSalary_net(netSal);

        clearSubmitFields();

    }

    private void tranferSalaryDetails() {
        if (btn_process.getText().equalsIgnoreCase("Process")) {
            boolean added = true;
            List<T_Salary> officeEmpSalaryList1 = officeEmpSalaryList;
            for (T_Salary t_Salary : officeEmpSalaryList1) {
                if (added) {
                    try {
                        t_Salary.setSalary_fromDate(from_date.getDate());
                        t_Salary.setSalary_toDate(to_date.getDate());
                        t_Salary.setSalary_status("REQUESTED");
                        if (cmbAddedEmp.getSelectedIndex() != 0) {
                            t_Salary.setSalary_enteredUser(Integer.parseInt(cmbAddedEmp.getSelectedItem().toString().split(" : ")[0]));
                        } else {
                            t_Salary.setSalary_enteredUser(0);
                        }
                        t_Salary.setSalary_enteredDate(addedDate.getDate());
                        boolean addSalaryDetail = salaryController.addSalaryDetail(t_Salary);
                        if (addSalaryDetail) {
                            added = true;
                        } else {
                            added = false;
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (added) {
                JOptionPane.showMessageDialog(this, "Office Salary Details Successfully Sent to Approval");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Something Went Wrong.. Please Check Again.");
            }
        } else {
            boolean updated = true;
            List<T_Salary> officeEmpSalaryList1 = officeEmpSalaryList;
            for (T_Salary t_Salary : officeEmpSalaryList1) {
                if (updated) {
                    try {
                        t_Salary.setSalary_fromDate(from_date.getDate());
                        t_Salary.setSalary_toDate(to_date.getDate());
                        t_Salary.setSalary_status("REQUESTED");
                        t_Salary.setSalary_enteredUser(Integer.parseInt(cmbAddedEmp.getSelectedItem().toString().split(" : ")[0]));
                        t_Salary.setSalary_enteredDate(addedDate.getDate());
                        boolean updateSalaryDetail = salaryController.updateSalaryDetail(t_Salary);
                        if (updateSalaryDetail) {
                            updated = true;
                        } else {
                            updated = false;
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (updated) {
                JOptionPane.showMessageDialog(this, "Office Salary Details Successfully Sent to Approval");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Something Went Wrong.. Please Check Again.");
            }
        }
    }

    private void clearSubmitFields() {
        txtDays.setText("");
        txtBasic.setText("");
        txtAllo1.setText("");
        txtAllo2.setText("");
        txtAllo3.setText("");
        txtAllo4.setText("");
        txtGross.setText("");
        txtOt.setText("");
        txtAdvance.setText("");
        txtAddition.setText("");
        txtTotAdd.setText("");
        txtDeduction.setText("");
        txtTotDed.setText("");
        txtNet.setText("");

        btnSubmit.setEnabled(false);
        tblEmp.setEnabled(true);
    }

    private void loadEmpCombo() {
        cmbAddedEmp.removeAll();
        try {
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                if (allLastAddedEmployee.getEmp_jobType_id() == 1) {
                    cmbAddedEmp.addItem(allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_initials() + " " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName());
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void laodPendingSalTable() {

        dtmPendingSal.setRowCount(0);
        try {
            List<T_Salary> allSalaries = salaryController.getAllSalaries();
            boolean added = false;
            for (T_Salary allSalary : allSalaries) {
                if (allSalary.getSalary_status().equalsIgnoreCase("PENDING")) {
                    if (dtmPendingSal.getRowCount() != 0) {
                        for (int i = 0; i < dtmPendingSal.getRowCount(); i++) {
                            if (dtmPendingSal.getValueAt(i, 0).toString().equalsIgnoreCase(allSalary.getSalary_fromDate().toString()) && dtmPendingSal.getValueAt(i, 1).toString().equalsIgnoreCase(allSalary.getSalary_toDate().toString())) {
                                added = true;
                            }
                        }
                        if (added == false) {
                            Object[] rowData = {allSalary.getSalary_fromDate(), allSalary.getSalary_toDate()};
                            dtmPendingSal.addRow(rowData);
                        }
                    } else {
                        Object[] rowData = {allSalary.getSalary_fromDate(), allSalary.getSalary_toDate()};
                        dtmPendingSal.addRow(rowData);
                    }
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(Office_Salary_Payment1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
        from_date.setDate(null);
        to_date.setDate(null);
        dtmEmp.setRowCount(0);
        cmbAddedEmp.setSelectedIndex(0);
        addedDate.setDate(null);

        btn_process.setText("Process");
    }
}
