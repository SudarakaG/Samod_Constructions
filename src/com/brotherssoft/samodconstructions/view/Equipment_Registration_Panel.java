/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brotherssoft.samodconstructions.view;

import com.brotherssoft.samodconstructions.controller.M_EquipmentController;
import com.brotherssoft.samodconstructions.controller.R_AssetCategoryController;
import com.brotherssoft.samodconstructions.controller.R_AssetController;
import com.brotherssoft.samodconstructions.custom.IDGenerator;
import com.brotherssoft.samodconstructions.model.M_Equipment;
import com.brotherssoft.samodconstructions.model.R_Asset;
import com.brotherssoft.samodconstructions.model.R_AssetCategory;
import com.brotherssoft.samodconstructions.serverconnector.ServerConnector;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akvasoft
 */
public class Equipment_Registration_Panel extends javax.swing.JPanel {

    R_AssetController assetController;
    R_AssetCategoryController assetCategoryController;
    M_EquipmentController equipmentController;
    DefaultTableModel dtmEquipment;
    DefaultComboBoxModel cmbModel; 
    

    /**
     * Creates new form Equipment_Registration_Panel
     */
    public Equipment_Registration_Panel() throws Exception {
        initComponents();

        assetController = ServerConnector.getServerConnetor().getAssetController();
        assetCategoryController = ServerConnector.getServerConnetor().getAssetCategoryController();
        equipmentController = ServerConnector.getServerConnetor().getEquipmentController();
        dtmEquipment = (DefaultTableModel) tbl_equipment_info.getModel();
        cmbModel = (DefaultComboBoxModel) cmb_assetType.getModel();

        //loadAssetCombo();
        loadAssetCategoryCombo();
        loadEquipmentTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Equipment_Registration_Panel = new javax.swing.JPanel();
        user_panel_hedding12 = new javax.swing.JPanel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jSeparator24 = new javax.swing.JSeparator();
        bank_panel_input_area2 = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        txt_equipment_name = new javax.swing.JTextField();
        txt_equipment_regNo = new javax.swing.JTextField();
        btn_save_equipment = new javax.swing.JButton();
        btn_new_equipment = new javax.swing.JButton();
        btn_equipment = new javax.swing.JButton();
        jLabel147 = new javax.swing.JLabel();
        cmb_assetType = new javax.swing.JComboBox<>();
        jLabel148 = new javax.swing.JLabel();
        cmb_asset_category = new javax.swing.JComboBox<>();
        jScrollPane16 = new javax.swing.JScrollPane();
        txtArea_equipment_desc = new javax.swing.JTextArea();
        jLabel149 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        txt_asset_capacity = new javax.swing.JTextField();
        datePicker_assetRegDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel144 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        txt_equip_depreRate = new javax.swing.JTextField();
        jLabel151 = new javax.swing.JLabel();
        cmb_equipment_status = new javax.swing.JComboBox<>();
        bank_panel_tbl2 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tbl_equipment_info = new javax.swing.JTable();
        txt_search_equipment = new javax.swing.JTextField();

        Equipment_Registration_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Equipment_Registration_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        user_panel_hedding12.setBackground(new java.awt.Color(122, 72, 222));

        jLabel94.setBackground(new java.awt.Color(255, 255, 255));
        jLabel94.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(204, 204, 255));
        jLabel94.setText("Administrations / System Management / Master Details /");

        jLabel95.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel95.setForeground(new java.awt.Color(204, 204, 204));
        jLabel95.setText("Equipment Registration");

        javax.swing.GroupLayout user_panel_hedding12Layout = new javax.swing.GroupLayout(user_panel_hedding12);
        user_panel_hedding12.setLayout(user_panel_hedding12Layout);
        user_panel_hedding12Layout.setHorizontalGroup(
            user_panel_hedding12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding12Layout.createSequentialGroup()
                .addGroup(user_panel_hedding12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(user_panel_hedding12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(user_panel_hedding12Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel95)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator24)))
                .addContainerGap())
        );
        user_panel_hedding12Layout.setVerticalGroup(
            user_panel_hedding12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_panel_hedding12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(user_panel_hedding12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel95)
                    .addComponent(jSeparator24, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        bank_panel_input_area2.setBackground(new java.awt.Color(255, 255, 255));
        bank_panel_input_area2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Save And Modify Equipment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel114.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel114.setText("Equipment Name");

        jLabel143.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel143.setText("Reg/Serial Number");

        txt_equipment_name.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_equipment_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_equipment_nameActionPerformed(evt);
            }
        });
        txt_equipment_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_equipment_nameKeyReleased(evt);
            }
        });

        txt_equipment_regNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_equipment_regNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_equipment_regNoActionPerformed(evt);
            }
        });

        btn_save_equipment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_save_equipment.setText("Save");
        btn_save_equipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save_equipmentActionPerformed(evt);
            }
        });

        btn_new_equipment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_new_equipment.setText("New");
        btn_new_equipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_new_equipmentActionPerformed(evt);
            }
        });

        btn_equipment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_equipment.setText("Equipment");
        btn_equipment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_equipmentMouseClicked(evt);
            }
        });

        jLabel147.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel147.setText("Asset Type");

        cmb_assetType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_assetType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Asset Type -" }));
        cmb_assetType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_assetTypeActionPerformed(evt);
            }
        });

        jLabel148.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel148.setText("Asset Category");

        cmb_asset_category.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_asset_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Asset Category -" }));
        cmb_asset_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_asset_categoryActionPerformed(evt);
            }
        });

        txtArea_equipment_desc.setColumns(20);
        txtArea_equipment_desc.setRows(5);
        txtArea_equipment_desc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtArea_equipment_descKeyPressed(evt);
            }
        });
        jScrollPane16.setViewportView(txtArea_equipment_desc);

        jLabel149.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel149.setText("Equipment Description");

        jLabel145.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel145.setText("Asset Capacity");

        txt_asset_capacity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_asset_capacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_asset_capacityActionPerformed(evt);
            }
        });

        datePicker_assetRegDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePicker_assetRegDateActionPerformed(evt);
            }
        });

        jLabel144.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel144.setText("Asset Registration Date");

        jLabel150.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel150.setText("Depriciation Rate");

        txt_equip_depreRate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel151.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel151.setText("Equipment Status");

        cmb_equipment_status.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_equipment_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        cmb_equipment_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_equipment_statusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bank_panel_input_area2Layout = new javax.swing.GroupLayout(bank_panel_input_area2);
        bank_panel_input_area2.setLayout(bank_panel_input_area2Layout);
        bank_panel_input_area2Layout.setHorizontalGroup(
            bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_save_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_new_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                        .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel145, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel144)
                            .addComponent(jLabel143, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel149, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel148, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_asset_category, 0, 307, Short.MAX_VALUE)
                            .addComponent(txt_equipment_name)
                            .addComponent(jScrollPane16)
                            .addComponent(txt_equipment_regNo)
                            .addComponent(txt_asset_capacity)
                            .addComponent(datePicker_assetRegDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                        .addComponent(jLabel150, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_equip_depreRate))
                    .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                        .addComponent(jLabel151, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_equipment_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                        .addComponent(jLabel147, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_assetType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bank_panel_input_area2Layout.setVerticalGroup(
            bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_input_area2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel148, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_asset_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel147, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_assetType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_equipment_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel149, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel143, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_equipment_regNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel145, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_asset_capacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datePicker_assetRegDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel144, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel151, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_equipment_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel150, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_equip_depreRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bank_panel_input_area2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_new_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bank_panel_tbl2.setBackground(new java.awt.Color(255, 255, 255));
        bank_panel_tbl2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Equipment Infomation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbl_equipment_info.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbl_equipment_info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Equipment Name"
            }
        ));
        tbl_equipment_info.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbl_equipment_info.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_equipment_infoMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(tbl_equipment_info);

        txt_search_equipment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txt_search_equipment.setForeground(new java.awt.Color(102, 102, 102));
        txt_search_equipment.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_search_equipment.setText("Search Equipment");
        txt_search_equipment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_search_equipmentMouseClicked(evt);
            }
        });
        txt_search_equipment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_search_equipmentKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout bank_panel_tbl2Layout = new javax.swing.GroupLayout(bank_panel_tbl2);
        bank_panel_tbl2.setLayout(bank_panel_tbl2Layout);
        bank_panel_tbl2Layout.setHorizontalGroup(
            bank_panel_tbl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bank_panel_tbl2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bank_panel_tbl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                    .addGroup(bank_panel_tbl2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt_search_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        bank_panel_tbl2Layout.setVerticalGroup(
            bank_panel_tbl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bank_panel_tbl2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(txt_search_equipment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout Equipment_Registration_PanelLayout = new javax.swing.GroupLayout(Equipment_Registration_Panel);
        Equipment_Registration_Panel.setLayout(Equipment_Registration_PanelLayout);
        Equipment_Registration_PanelLayout.setHorizontalGroup(
            Equipment_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(user_panel_hedding12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Equipment_Registration_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bank_panel_input_area2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bank_panel_tbl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        Equipment_Registration_PanelLayout.setVerticalGroup(
            Equipment_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Equipment_Registration_PanelLayout.createSequentialGroup()
                .addComponent(user_panel_hedding12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Equipment_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bank_panel_tbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bank_panel_input_area2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Equipment_Registration_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Equipment_Registration_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_equipmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_equipmentMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_equipmentMouseClicked

    private void cmb_asset_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_asset_categoryActionPerformed
        if (cmb_asset_category.getSelectedIndex() != 0) {
            
//            for (int i = 1; i < cmb_assetType.getItemCount(); i++) {
//                cmbModel.removeElementAt(i);
//            }
            
            cmbModel = new DefaultComboBoxModel();
            cmbModel.addElement("- Select Asset Type -");
            cmbModel.setSelectedItem("- Select Asset Type -");
            cmb_assetType.setModel(cmbModel);
            
            try {
                List<R_Asset> allAssets = assetController.getAllAssets();
                int categoryId = assetCategoryController.searchAssetCategory(cmb_asset_category.getSelectedItem().toString()).getAssetCategory_id();
//
                for (R_Asset asset : allAssets) {
                    if (asset.getAsset_category_id() == categoryId) {
                        cmb_assetType.addItem(asset.getAsset_name());
                    } else {
                        cmb_assetType.removeAll();
                        cmb_assetType.revalidate();
                        cmb_assetType.repaint();
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        cmb_assetType.requestFocus();
    }//GEN-LAST:event_cmb_asset_categoryActionPerformed

    private void btn_save_equipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save_equipmentActionPerformed
        if(btn_save_equipment.getText().equalsIgnoreCase("Save")){
            addEquipment();
        }else{
            updateEquipment();
        }
        loadEquipmentTable();
    }//GEN-LAST:event_btn_save_equipmentActionPerformed

    private void tbl_equipment_infoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_equipment_infoMouseClicked
        loadFieldsFromTable(searchByTableName());
        txt_search_equipment.setText("Search Equipment");
        txt_search_equipment.setForeground(Color.GRAY);
    }//GEN-LAST:event_tbl_equipment_infoMouseClicked

    private void btn_new_equipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_new_equipmentActionPerformed
        cmb_asset_category.setSelectedIndex(0);
        cmb_assetType.setSelectedIndex(0);
        txt_equipment_name.setText("");
        txtArea_equipment_desc.setText("");
        txt_equipment_regNo.setText("");
        txt_asset_capacity.setText("");
        datePicker_assetRegDate.setDate(new Date());
        cmb_equipment_status.setSelectedIndex(0);
        txt_equip_depreRate.setText("");
        
        btn_save_equipment.setText("Save");
    }//GEN-LAST:event_btn_new_equipmentActionPerformed

    private void txt_search_equipmentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_equipmentKeyReleased
        try {
            dtmEquipment.setRowCount(0);
            List<M_Equipment> allEquipments = equipmentController.getAllEquipmentsByLetter(txt_search_equipment.getText());
            for (M_Equipment allEquipment : allEquipments) {
                String[] rowData = {allEquipment.getEquipment_name()};
                dtmEquipment.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txt_search_equipmentKeyReleased

    private void txt_search_equipmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_search_equipmentMouseClicked
        txt_search_equipment.setText("");
        txt_search_equipment.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_search_equipmentMouseClicked

    private void cmb_assetTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_assetTypeActionPerformed
        txt_equipment_name.requestFocus();
    }//GEN-LAST:event_cmb_assetTypeActionPerformed

    private void txt_equipment_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_equipment_nameActionPerformed
        txtArea_equipment_desc.requestFocus();
    }//GEN-LAST:event_txt_equipment_nameActionPerformed

    private void txtArea_equipment_descKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArea_equipment_descKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txt_equipment_regNo.requestFocus();
        }
    }//GEN-LAST:event_txtArea_equipment_descKeyPressed

    private void txt_equipment_regNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_equipment_regNoActionPerformed
        txt_asset_capacity.requestFocus();
    }//GEN-LAST:event_txt_equipment_regNoActionPerformed

    private void txt_asset_capacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_asset_capacityActionPerformed
        datePicker_assetRegDate.requestFocus();
    }//GEN-LAST:event_txt_asset_capacityActionPerformed

    private void datePicker_assetRegDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePicker_assetRegDateActionPerformed
        cmb_equipment_status.requestFocus();
    }//GEN-LAST:event_datePicker_assetRegDateActionPerformed

    private void cmb_equipment_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_equipment_statusActionPerformed
        txt_equip_depreRate.requestFocus();
    }//GEN-LAST:event_cmb_equipment_statusActionPerformed

    private void txt_equipment_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_equipment_nameKeyReleased
        if(cmb_asset_category.getSelectedIndex() != 0 && cmb_assetType.getSelectedIndex() != 0){
        try {
            M_Equipment searEquipment = equipmentController.searEquipment(txt_equipment_name.getText());
            if (searEquipment != null && searEquipment.getEquipment_asset_category_id() == assetCategoryController.searchAssetCategory(cmb_asset_category.getSelectedItem().toString()).getAssetCategory_id() && searEquipment.getEquipment_asset_id() == assetController.searchAsset(cmb_assetType.getSelectedItem().toString()).getAsset_id()) {
                JOptionPane.showMessageDialog(this, "An Equipment Already Saved from this Category & Type");
                loadFieldsFromTable(searEquipment);
            }
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Please Select Asset Category & Asset Type");
            cmb_asset_category.requestFocus();
        }
    }//GEN-LAST:event_txt_equipment_nameKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Equipment_Registration_Panel;
    private javax.swing.JPanel bank_panel_input_area2;
    private javax.swing.JPanel bank_panel_tbl2;
    private javax.swing.JButton btn_equipment;
    private javax.swing.JButton btn_new_equipment;
    private javax.swing.JButton btn_save_equipment;
    private javax.swing.JComboBox<String> cmb_assetType;
    private javax.swing.JComboBox<String> cmb_asset_category;
    private javax.swing.JComboBox<String> cmb_equipment_status;
    private org.jdesktop.swingx.JXDatePicker datePicker_assetRegDate;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JTable tbl_equipment_info;
    private javax.swing.JTextArea txtArea_equipment_desc;
    private javax.swing.JTextField txt_asset_capacity;
    private javax.swing.JTextField txt_equip_depreRate;
    private javax.swing.JTextField txt_equipment_name;
    private javax.swing.JTextField txt_equipment_regNo;
    private javax.swing.JTextField txt_search_equipment;
    private javax.swing.JPanel user_panel_hedding12;
    // End of variables declaration//GEN-END:variables

    private void loadAssetCombo() {
        try {
            cmb_assetType.removeAll();
            List<R_Asset> allAssets = assetController.getAllAssets();
            for (R_Asset allAsset : allAssets) {
                cmb_assetType.addItem(allAsset.getAsset_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAssetCategoryCombo() {
        try {
            cmb_asset_category.removeAll();
            List<R_AssetCategory> allAssetCategorys = assetCategoryController.getAllAssetCategorys();
            for (R_AssetCategory allAssetCategory : allAssetCategorys) {
                cmb_asset_category.addItem(allAssetCategory.getAssetCategory_description());
            }
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadEquipmentTable() {
        try {
            dtmEquipment.setRowCount(0);
            List<M_Equipment> allEquipments = equipmentController.getAllEquipments();
            for (M_Equipment allEquipment : allEquipments) {
                String[] rowData = {allEquipment.getEquipment_name()};
                dtmEquipment.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addEquipment() {
        if(cmb_asset_category.getSelectedIndex() != 0 && cmb_assetType.getSelectedIndex() != 0){
        try {
            
            int eqId = IDGenerator.getNewID("m_equipment", "EQUIPMENT_ID");
            int assetId = assetController.searchAsset(cmb_assetType.getSelectedItem().toString()).getAsset_id();
            int assetCatId = assetCategoryController.searchAssetCategory(cmb_asset_category.getSelectedItem().toString()).getAssetCategory_id();
            String name = txt_equipment_name.getText();
            String desc = txtArea_equipment_desc.getText();
            String regNo = txt_equipment_regNo.getText();
            String capacity = txt_asset_capacity.getText();
            Date regDate = datePicker_assetRegDate.getDate();
            int status = cmb_equipment_status.getSelectedIndex();
            double depreRate = Double.parseDouble(txt_equip_depreRate.getText());
            
            M_Equipment equipment = new M_Equipment(eqId, assetId, assetCatId, name, desc, regNo, capacity, regDate, status, depreRate);
            boolean addEquipment = equipmentController.addEquipment(equipment);
            if (addEquipment) {
                JOptionPane.showMessageDialog(this, "Equipment Successfully Added to the System..");
            }else{
                JOptionPane.showMessageDialog(this, "Adding Equipment Failed.. Please Check Again..");
            }
            
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Please Select Asset Category & Asset Type");
            cmb_asset_category.requestFocus();
        }
    }

    private void updateEquipment() {
        if(cmb_asset_category.getSelectedIndex() != 0 && cmb_assetType.getSelectedIndex() != 0){
        try {
            
            int eqId = searchByTableName().getEquipment_id();
            int assetId = assetController.searchAsset(cmb_assetType.getSelectedItem().toString()).getAsset_id();
            int assetCatId = assetCategoryController.searchAssetCategory(cmb_asset_category.getSelectedItem().toString()).getAssetCategory_id();
            String name = txt_equipment_name.getText();
            String desc = txtArea_equipment_desc.getText();
            String regNo = txt_equipment_regNo.getText();
            String capacity = txt_asset_capacity.getText();
            Date regDate = datePicker_assetRegDate.getDate();
            int status = cmb_equipment_status.getSelectedIndex();
            double depreRate = Double.parseDouble(txt_equip_depreRate.getText());
            
            M_Equipment equipment = new M_Equipment(eqId, assetId, assetCatId, name, desc, regNo, capacity, regDate, status, depreRate);
            boolean updateEquipment = equipmentController.updateEuipment(equipment);
            if (updateEquipment) {
                JOptionPane.showMessageDialog(this, "Equipment Successfully Updated..");
            }else{
                JOptionPane.showMessageDialog(this, "Updating Equipment Failed.. Please Check Again..");
            }
            
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Please Select Asset Category & Asset Type");
            cmb_asset_category.requestFocus();
        }
    }

    private void loadFieldsFromTable(M_Equipment equipment) {
        try {
             
            cmb_asset_category.setSelectedItem(assetCategoryController.searchAssetCategory(equipment.getEquipment_asset_category_id()).getAssetCategory_description());
            cmb_assetType.setSelectedItem(assetController.searchAsset(equipment.getEquipment_asset_id()).getAsset_name());
            txt_equipment_name.setText(equipment.getEquipment_name());
            txtArea_equipment_desc.setText(equipment.getEquipment_description());
            txt_equipment_regNo.setText(equipment.getEquipment_regNo());
            txt_asset_capacity.setText(equipment.getEquipment_capacity());
            datePicker_assetRegDate.setDate(equipment.getEquipment_regDate());
            cmb_equipment_status.setSelectedIndex(equipment.getEquipment_status());
            txt_equip_depreRate.setText(Double.toString(equipment.getEquipment_depreciationRate()));
            
            btn_save_equipment.setText("Update");
            
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private M_Equipment searchByTableName() {
        int selectedRow = tbl_equipment_info.getSelectedRow();
        String name = (String) dtmEquipment.getValueAt(selectedRow, 0);
        M_Equipment searEquipment = null;
        try {
            searEquipment = equipmentController.searEquipment(name);
        } catch (Exception ex) {
            Logger.getLogger(Equipment_Registration_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return searEquipment;
    }
}
