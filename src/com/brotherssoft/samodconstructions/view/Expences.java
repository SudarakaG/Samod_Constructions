/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brotherssoft.samodconstructions.view;

import com.brotherssoft.samodconstructions.controller.M_AccountController;
import com.brotherssoft.samodconstructions.controller.M_EmployeeController;
import com.brotherssoft.samodconstructions.controller.M_Project_PrimaryController;
import com.brotherssoft.samodconstructions.controller.M_PurchaserController;
import com.brotherssoft.samodconstructions.controller.R_ExpenceSubTypeController;
import com.brotherssoft.samodconstructions.controller.R_ExpenceTypeController;
import com.brotherssoft.samodconstructions.controller.R_PaymentModeController;
import com.brotherssoft.samodconstructions.controller.T_ExpencesController;
import com.brotherssoft.samodconstructions.custom.IDGenerator;
import com.brotherssoft.samodconstructions.custom.Validation;
import com.brotherssoft.samodconstructions.model.M_Account;
import com.brotherssoft.samodconstructions.model.M_Employee;
import com.brotherssoft.samodconstructions.model.M_Project_Primary;
import com.brotherssoft.samodconstructions.model.M_Purchaser;
import com.brotherssoft.samodconstructions.model.R_ExpencesType;
import com.brotherssoft.samodconstructions.model.T_Expences;
import com.brotherssoft.samodconstructions.serverconnector.ServerConnector;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akvasoft
 */
public class Expences extends javax.swing.JPanel {

    R_ExpenceSubTypeController expenceSubTypeController;
    R_ExpenceTypeController expenceTypeController;
    M_EmployeeController employeeController;
    M_PurchaserController purchaserController;
    M_Project_PrimaryController projectController;
    R_PaymentModeController paymentModeController;
    M_AccountController accountController;
    T_ExpencesController expencesController;

    DefaultTableModel dtmExpenceTable;
    DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    T_Expences expencesGlobal = null;
    public static int expenceIdPub;

    /**
     * Creates new form Employee_Panel
     */
    public Expences() throws Exception {
        initComponents();
        New_Expences_Panel.setVisible(false);
        Expences_View_Panel.setVisible(true);

        expenceSubTypeController = ServerConnector.getServerConnetor().getExpenceSubTypeController();
        expenceTypeController = ServerConnector.getServerConnetor().getExpenceTypeController();
        employeeController = ServerConnector.getServerConnetor().getEmployeeController();
        purchaserController = ServerConnector.getServerConnetor().getPurchaserController();
        projectController = ServerConnector.getServerConnetor().getPrimary_ProjectController();
        paymentModeController = ServerConnector.getServerConnetor().getPaymentModeController();
        accountController = ServerConnector.getServerConnetor().getAccountController();
        expencesController = ServerConnector.getServerConnetor().getExpencesController();

        dtmExpenceTable = (DefaultTableModel) tbl_expencesInfo.getModel();

        loadExpenceTypeCombo();
        loadEmployeeCombo();
        laodAuthorityCombo();
        loadPurchaserCombo();
        loadSiteCombo();
        loadAccountCombo();
        loadSearchProjectCombo();

        loadExpencesTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        New_Expences_Panel = new javax.swing.JPanel();
        bank_panel_hedding3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        txt_Input_Panel_Branch4 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        dp_expenceDate = new org.jdesktop.swingx.JXDatePicker();
        cmb_expence_type = new javax.swing.JComboBox<>();
        jLabel109 = new javax.swing.JLabel();
        btn_save_expence = new javax.swing.JButton();
        jLabel113 = new javax.swing.JLabel();
        cmb_expence_subType = new javax.swing.JComboBox<>();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        cmb_purchaser = new javax.swing.JComboBox<>();
        txt_invoiceNo = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        txt_bilAmount = new javax.swing.JTextField();
        jLabel117 = new javax.swing.JLabel();
        txt_vatAmount = new javax.swing.JTextField();
        txt_tot = new javax.swing.JTextField();
        btn_new_expence = new javax.swing.JButton();
        jLabel119 = new javax.swing.JLabel();
        cmb_authority = new javax.swing.JComboBox<>();
        jLabel120 = new javax.swing.JLabel();
        cmb_site = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel118 = new javax.swing.JLabel();
        radio_cash = new javax.swing.JRadioButton();
        radio_cheque = new javax.swing.JRadioButton();
        radio_draft = new javax.swing.JRadioButton();
        cmb_companyAccount = new javax.swing.JComboBox<>();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        cmb_expence_entered_emp = new javax.swing.JComboBox<>();
        jLabel108 = new javax.swing.JLabel();
        dp_entered_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel123 = new javax.swing.JLabel();
        cmb_expence_approved_emp = new javax.swing.JComboBox<>();
        jLabel110 = new javax.swing.JLabel();
        dp_approved_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel124 = new javax.swing.JLabel();
        dp_issue_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel125 = new javax.swing.JLabel();
        dp_receive_date = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_expence_description = new javax.swing.JTextArea();
        jLabel126 = new javax.swing.JLabel();
        txt_refNo = new javax.swing.JTextField();
        Expences_View_Panel = new javax.swing.JPanel();
        bank_panel_hedding5 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        tbl_panel_Branch2 = new javax.swing.JPanel();
        btn_branch1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_expencesInfo = new javax.swing.JTable();
        txt_emp_search1 = new javax.swing.JTextField();
        cmb_searchExpences_project = new javax.swing.JComboBox<>();
        cmb_searchExpences_approval = new javax.swing.JComboBox<>();

        New_Expences_Panel.setBackground(new java.awt.Color(255, 255, 255));
        New_Expences_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));
        New_Expences_Panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bank_panel_hedding3.setBackground(new java.awt.Color(122, 72, 222));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 204, 255));
        jLabel24.setText("Administrations / System Management / Operations /");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 204, 204));
        jLabel28.setText("Expences Manager");

        javax.swing.GroupLayout bank_panel_hedding3Layout = new javax.swing.GroupLayout(bank_panel_hedding3);
        bank_panel_hedding3.setLayout(bank_panel_hedding3Layout);
        bank_panel_hedding3Layout.setHorizontalGroup(
            bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(509, Short.MAX_VALUE))
            .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9))
        );
        bank_panel_hedding3Layout.setVerticalGroup(
            bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        New_Expences_Panel.add(bank_panel_hedding3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("List of Expences");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        New_Expences_Panel.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 130, 150, -1));

        txt_Input_Panel_Branch4.setBackground(new java.awt.Color(255, 255, 255));
        txt_Input_Panel_Branch4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Expence Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel107.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel107.setText("Account Date");

        dp_expenceDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_expenceDateActionPerformed(evt);
            }
        });

        cmb_expence_type.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_expence_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Expences Type -" }));

        jLabel109.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel109.setText("Type of Expence");

        btn_save_expence.setBackground(new java.awt.Color(51, 51, 255));
        btn_save_expence.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_save_expence.setForeground(new java.awt.Color(255, 255, 255));
        btn_save_expence.setText("Save");
        btn_save_expence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save_expenceActionPerformed(evt);
            }
        });

        jLabel113.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel113.setText("Sub Type of Expence");

        cmb_expence_subType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_expence_subType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Expence Sub Type -" }));

        jLabel114.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel114.setText("Description");

        jLabel115.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel115.setText("Purchaser");

        cmb_purchaser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_purchaser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Purchaser -" }));

        txt_invoiceNo.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        jLabel116.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel116.setText("Invoice/Payment no");

        txt_bilAmount.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        txt_bilAmount.setForeground(new java.awt.Color(102, 102, 102));
        txt_bilAmount.setText("Bill Amount");
        txt_bilAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_bilAmountMouseClicked(evt);
            }
        });
        txt_bilAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bilAmountActionPerformed(evt);
            }
        });
        txt_bilAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_bilAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_bilAmountKeyReleased(evt);
            }
        });

        jLabel117.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel117.setText("Value");

        txt_vatAmount.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        txt_vatAmount.setForeground(new java.awt.Color(102, 102, 102));
        txt_vatAmount.setText("Vat Amount");
        txt_vatAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_vatAmountMouseClicked(evt);
            }
        });
        txt_vatAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_vatAmountActionPerformed(evt);
            }
        });
        txt_vatAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_vatAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_vatAmountKeyReleased(evt);
            }
        });

        txt_tot.setEditable(false);
        txt_tot.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        txt_tot.setForeground(new java.awt.Color(102, 102, 102));
        txt_tot.setText("Total");
        txt_tot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_totMouseClicked(evt);
            }
        });

        btn_new_expence.setBackground(new java.awt.Color(51, 51, 255));
        btn_new_expence.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_new_expence.setForeground(new java.awt.Color(255, 255, 255));
        btn_new_expence.setText("New");
        btn_new_expence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_new_expenceActionPerformed(evt);
            }
        });

        jLabel119.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel119.setText("Authority");

        cmb_authority.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_authority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Authority -" }));

        jLabel120.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel120.setText("Allocated Site");

        cmb_site.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_site.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Site -" }));
        cmb_site.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmb_siteMouseClicked(evt);
            }
        });
        cmb_site.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_siteActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel118.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel118.setText("Payment Mode");

        radio_cash.setBackground(new java.awt.Color(153, 153, 153));
        buttonGroup1.add(radio_cash);
        radio_cash.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        radio_cash.setSelected(true);
        radio_cash.setText("Cash");

        radio_cheque.setBackground(new java.awt.Color(153, 153, 153));
        buttonGroup1.add(radio_cheque);
        radio_cheque.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        radio_cheque.setText("Cheque");

        radio_draft.setBackground(new java.awt.Color(153, 153, 153));
        buttonGroup1.add(radio_draft);
        radio_draft.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        radio_draft.setText("Bank Draft");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radio_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radio_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radio_draft, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radio_cash)
                        .addComponent(radio_cheque)
                        .addComponent(radio_draft))
                    .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmb_companyAccount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_companyAccount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));

        jLabel121.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel121.setText("Company Account");

        jLabel122.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel122.setText("Entered By");

        cmb_expence_entered_emp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_expence_entered_emp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Entered Employee -" }));
        cmb_expence_entered_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_expence_entered_empActionPerformed(evt);
            }
        });

        jLabel108.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel108.setText("Entered Date");

        dp_entered_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_entered_dateActionPerformed(evt);
            }
        });

        jLabel123.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel123.setText("Approved By");

        cmb_expence_approved_emp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_expence_approved_emp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Approved Employee -" }));

        jLabel110.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel110.setText("Aproved Date");

        dp_approved_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_approved_dateActionPerformed(evt);
            }
        });

        jLabel124.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel124.setText("Issue Date");

        dp_issue_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_issue_dateActionPerformed(evt);
            }
        });

        jLabel125.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel125.setText("Receive Date");

        dp_receive_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_receive_dateActionPerformed(evt);
            }
        });

        txt_expence_description.setColumns(20);
        txt_expence_description.setRows(5);
        jScrollPane1.setViewportView(txt_expence_description);

        jLabel126.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel126.setText("Ref Number");

        txt_refNo.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        javax.swing.GroupLayout txt_Input_Panel_Branch4Layout = new javax.swing.GroupLayout(txt_Input_Panel_Branch4);
        txt_Input_Panel_Branch4.setLayout(txt_Input_Panel_Branch4Layout);
        txt_Input_Panel_Branch4Layout.setHorizontalGroup(
            txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel124)
                            .addComponent(jLabel125))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dp_receive_date, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(dp_issue_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel110)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmb_expence_approved_emp, 0, 350, Short.MAX_VALUE)
                                .addComponent(dp_approved_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                            .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel109)
                                                .addComponent(jLabel113)
                                                .addComponent(jLabel114)
                                                .addComponent(jLabel107))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                            .addComponent(jLabel122, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(45, 45, 45)))
                                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                        .addComponent(jLabel108)
                                        .addGap(52, 52, 52)))
                                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmb_expence_entered_emp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmb_expence_subType, 0, 350, Short.MAX_VALUE)
                                    .addComponent(cmb_expence_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dp_expenceDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1)
                                    .addComponent(dp_entered_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                            .addComponent(jLabel119, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_authority, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                            .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(cmb_purchaser, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                            .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel116)
                                .addComponent(jLabel117, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_bilAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(txt_invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txt_tot, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_vatAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                            .addComponent(jLabel120, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_site, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                            .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmb_companyAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txt_refNo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addComponent(btn_save_expence, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_new_expence)))
                .addContainerGap())
        );

        txt_Input_Panel_Branch4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_new_expence, btn_save_expence});

        txt_Input_Panel_Branch4Layout.setVerticalGroup(
            txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmb_expence_type, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmb_expence_subType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(dp_expenceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel122, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmb_expence_entered_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(dp_entered_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmb_expence_approved_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dp_approved_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel124, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dp_issue_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmb_purchaser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txt_refNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addComponent(jLabel116, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel117, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txt_invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_bilAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_vatAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_tot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel120, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_site, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_authority, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel119, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_companyAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dp_receive_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel125, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(txt_Input_Panel_Branch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_new_expence, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_save_expence, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        New_Expences_Panel.add(txt_Input_Panel_Branch4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 154, 1050, 560));

        Expences_View_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Expences_View_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        bank_panel_hedding5.setBackground(new java.awt.Color(122, 72, 222));

        jLabel60.setBackground(new java.awt.Color(255, 255, 255));
        jLabel60.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(204, 204, 255));
        jLabel60.setText("Administrations / System Management / Master Detail / Employee Manager");

        jLabel61.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(204, 204, 204));
        jLabel61.setText("Show All Expences");

        javax.swing.GroupLayout bank_panel_hedding5Layout = new javax.swing.GroupLayout(bank_panel_hedding5);
        bank_panel_hedding5.setLayout(bank_panel_hedding5Layout);
        bank_panel_hedding5Layout.setHorizontalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11))
        );
        bank_panel_hedding5Layout.setVerticalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel61)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tbl_panel_Branch2.setBackground(new java.awt.Color(255, 255, 255));
        tbl_panel_Branch2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Currunt Expences", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        btn_branch1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_branch1.setText("New Expence");
        btn_branch1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_branch1MouseClicked(evt);
            }
        });
        btn_branch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch1ActionPerformed(evt);
            }
        });

        tbl_expencesInfo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbl_expencesInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Invoice Number", "Project", "Amount", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_expencesInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbl_expencesInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_expencesInfoMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_expencesInfo);

        txt_emp_search1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txt_emp_search1.setForeground(new java.awt.Color(102, 102, 102));
        txt_emp_search1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_emp_search1.setText("Search By Invoice");
        txt_emp_search1.setToolTipText("Use Invoice Number To Search !");
        txt_emp_search1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_emp_search1MouseClicked(evt);
            }
        });
        txt_emp_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyTyped(evt);
            }
        });

        cmb_searchExpences_project.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Project -", "all project" }));
        cmb_searchExpences_project.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_searchExpences_projectActionPerformed(evt);
            }
        });

        cmb_searchExpences_approval.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "APPROVED", "PENDING" }));
        cmb_searchExpences_approval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_searchExpences_approvalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tbl_panel_Branch2Layout = new javax.swing.GroupLayout(tbl_panel_Branch2);
        tbl_panel_Branch2.setLayout(tbl_panel_Branch2Layout);
        tbl_panel_Branch2Layout.setHorizontalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
            .addGroup(tbl_panel_Branch2Layout.createSequentialGroup()
                .addComponent(btn_branch1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(cmb_searchExpences_project, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(cmb_searchExpences_approval, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_emp_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tbl_panel_Branch2Layout.setVerticalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbl_panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_branch1)
                    .addComponent(cmb_searchExpences_project, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_emp_search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_searchExpences_approval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Expences_View_PanelLayout = new javax.swing.GroupLayout(Expences_View_Panel);
        Expences_View_Panel.setLayout(Expences_View_PanelLayout);
        Expences_View_PanelLayout.setHorizontalGroup(
            Expences_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Expences_View_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        Expences_View_PanelLayout.setVerticalGroup(
            Expences_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Expences_View_PanelLayout.createSequentialGroup()
                .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(New_Expences_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Expences_View_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Expences_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(New_Expences_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Expences_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(New_Expences_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 713, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_branch1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_branch1MouseClicked

    }//GEN-LAST:event_btn_branch1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked

    }//GEN-LAST:event_jButton4MouseClicked

    private void btn_branch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch1ActionPerformed
        New_Expences_Panel.setVisible(true);
        Expences_View_Panel.setVisible(false);
    }//GEN-LAST:event_btn_branch1ActionPerformed

    private void tbl_expencesInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_expencesInfoMouseClicked
        clearFields();
        searchByTableName();
        loadFromExpenceTable();
        New_Expences_Panel.setVisible(true);
        Expences_View_Panel.setVisible(false);
    }//GEN-LAST:event_tbl_expencesInfoMouseClicked

    private void cmb_searchExpences_projectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_searchExpences_projectActionPerformed
        dtmExpenceTable.setRowCount(0);
        try {
            if (cmb_searchExpences_project.getSelectedIndex() != 1) {

                List<T_Expences> allExpences = expencesController.getAllExpences();
                int projectId = projectController.searchPrimaryProjectByName(cmb_searchExpences_project.getSelectedItem().toString()).getProject_id();
                String exDate = "";
                for (T_Expences allExpence : allExpences) {
                    if (allExpence.getExpence_refSiteId() == projectId) {
                        exDate = sdf.format(allExpence.getExpence_date());
                        String rowData[] = {exDate, allExpence.getExpence_invoiceNo(), projectController.searchPrimaryProject(allExpence.getExpence_refSiteId()).getProject_primary_name(), Double.toString(allExpence.getExpence_invoiceAmount()), allExpence.getExpence_description()};
                        dtmExpenceTable.addRow(rowData);
                    }
                }
            } else {
                loadExpencesTable();
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmb_searchExpences_projectActionPerformed

    private void txt_emp_search1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyTyped

    }//GEN-LAST:event_txt_emp_search1KeyTyped

    private void txt_emp_search1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyPressed

    }//GEN-LAST:event_txt_emp_search1KeyPressed

    private void txt_emp_search1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_emp_search1MouseClicked

    }//GEN-LAST:event_txt_emp_search1MouseClicked

    private void txt_emp_search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyReleased

    }//GEN-LAST:event_txt_emp_search1KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        New_Expences_Panel.setVisible(false);
        Expences_View_Panel.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void dp_expenceDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_expenceDateActionPerformed

    }//GEN-LAST:event_dp_expenceDateActionPerformed

    private void btn_save_expenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save_expenceActionPerformed
        sendToDB();
    }//GEN-LAST:event_btn_save_expenceActionPerformed

    private void btn_new_expenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_new_expenceActionPerformed
        try {
            expencesController.releaseExpence(expenceIdPub);
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearFields();
    }//GEN-LAST:event_btn_new_expenceActionPerformed

    private void dp_entered_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_entered_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dp_entered_dateActionPerformed

    private void dp_approved_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_approved_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dp_approved_dateActionPerformed

    private void cmb_expence_entered_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_expence_entered_empActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_expence_entered_empActionPerformed

    private void dp_issue_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_issue_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dp_issue_dateActionPerformed

    private void dp_receive_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_receive_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dp_receive_dateActionPerformed

    private void txt_vatAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_vatAmountActionPerformed
        getTotalAmount();
    }//GEN-LAST:event_txt_vatAmountActionPerformed

    private void txt_bilAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_bilAmountMouseClicked
        txt_bilAmount.setText("");
        txt_bilAmount.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_bilAmountMouseClicked

    private void txt_vatAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_vatAmountMouseClicked
        txt_vatAmount.setText("");
        txt_vatAmount.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_vatAmountMouseClicked

    private void txt_totMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_totMouseClicked
        getTotalAmount();
    }//GEN-LAST:event_txt_totMouseClicked

    private void cmb_siteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_siteMouseClicked
        getTotalAmount();
    }//GEN-LAST:event_cmb_siteMouseClicked

    private void cmb_siteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_siteActionPerformed
        getTotalAmount();
    }//GEN-LAST:event_cmb_siteActionPerformed

    private void txt_bilAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bilAmountKeyPressed
        Validation.priceText(txt_bilAmount);
    }//GEN-LAST:event_txt_bilAmountKeyPressed

    private void txt_bilAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bilAmountKeyReleased
        Validation.priceText(txt_bilAmount);
    }//GEN-LAST:event_txt_bilAmountKeyReleased

    private void txt_vatAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_vatAmountKeyPressed
        Validation.priceText(txt_vatAmount);
    }//GEN-LAST:event_txt_vatAmountKeyPressed

    private void txt_vatAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_vatAmountKeyReleased
        Validation.priceText(txt_vatAmount);
    }//GEN-LAST:event_txt_vatAmountKeyReleased

    private void txt_bilAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bilAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bilAmountActionPerformed

    private void cmb_searchExpences_approvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_searchExpences_approvalActionPerformed
        dtmExpenceTable.setRowCount(0);
        if (cmb_searchExpences_approval.getSelectedIndex() != 0) {
            try {
                List<T_Expences> allExpenceses = expencesController.getAllExpences();
                String date = "";
                if (cmb_searchExpences_approval.getSelectedIndex() == 1) {
                    for (T_Expences allExpence : allExpenceses) {
                        if (allExpence.getExpence_status().equalsIgnoreCase("A")) {
                            if (allExpence.getExpence_date() != null) {
                                date = allExpence.getExpence_date().toString();
                            }
                            String[] rowData = {date, allExpence.getExpence_invoiceNo(), projectController.searchPrimaryProject(allExpence.getExpence_refSiteId()).getProject_primary_name(), Double.toString(allExpence.getExpence_invoiceAmount()), allExpence.getExpence_description()};
                            dtmExpenceTable.addRow(rowData);
                        }
                    }
                } else {
                    if (cmb_searchExpences_approval.getSelectedIndex() == 2) {
                        for (T_Expences allExpence : allExpenceses) {
                            if (allExpence.getExpence_status().equalsIgnoreCase("P")) {
                                if (allExpence.getExpence_date() != null) {
                                    date = allExpence.getExpence_date().toString();
                                }
                                String[] rowData = {date, allExpence.getExpence_invoiceNo(), projectController.searchPrimaryProject(allExpence.getExpence_refSiteId()).getProject_primary_name(), Double.toString(allExpence.getExpence_invoiceAmount()), allExpence.getExpence_description()};
                                dtmExpenceTable.addRow(rowData);
                            }
                        }
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(IncomeNew.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            loadExpencesTable();
        }
    }//GEN-LAST:event_cmb_searchExpences_approvalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Expences_View_Panel;
    private javax.swing.JPanel New_Expences_Panel;
    private javax.swing.JPanel bank_panel_hedding3;
    private javax.swing.JPanel bank_panel_hedding5;
    private javax.swing.JButton btn_branch1;
    private javax.swing.JButton btn_new_expence;
    private javax.swing.JButton btn_save_expence;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmb_authority;
    private javax.swing.JComboBox<String> cmb_companyAccount;
    private javax.swing.JComboBox<String> cmb_expence_approved_emp;
    private javax.swing.JComboBox<String> cmb_expence_entered_emp;
    private javax.swing.JComboBox<String> cmb_expence_subType;
    private javax.swing.JComboBox<String> cmb_expence_type;
    private javax.swing.JComboBox<String> cmb_purchaser;
    private javax.swing.JComboBox<String> cmb_searchExpences_approval;
    private javax.swing.JComboBox<String> cmb_searchExpences_project;
    private javax.swing.JComboBox<String> cmb_site;
    private org.jdesktop.swingx.JXDatePicker dp_approved_date;
    private org.jdesktop.swingx.JXDatePicker dp_entered_date;
    private org.jdesktop.swingx.JXDatePicker dp_expenceDate;
    private org.jdesktop.swingx.JXDatePicker dp_issue_date;
    private org.jdesktop.swingx.JXDatePicker dp_receive_date;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JRadioButton radio_cash;
    private javax.swing.JRadioButton radio_cheque;
    private javax.swing.JRadioButton radio_draft;
    private javax.swing.JTable tbl_expencesInfo;
    private javax.swing.JPanel tbl_panel_Branch2;
    private javax.swing.JPanel txt_Input_Panel_Branch4;
    private javax.swing.JTextField txt_bilAmount;
    private javax.swing.JTextField txt_emp_search1;
    private javax.swing.JTextArea txt_expence_description;
    private javax.swing.JTextField txt_invoiceNo;
    private javax.swing.JTextField txt_refNo;
    private javax.swing.JTextField txt_tot;
    private javax.swing.JTextField txt_vatAmount;
    // End of variables declaration//GEN-END:variables

    private void loadExpenceTypeCombo() {
        cmb_expence_type.removeAll();
        try {
            List<R_ExpencesType> allExpencesTypes = expenceTypeController.getAllExpencesTypes();
            for (R_ExpencesType allExpencesType : allExpencesTypes) {
                cmb_expence_type.addItem(allExpencesType.getExpencesType_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadEmployeeCombo() {
        cmb_expence_approved_emp.removeAll();
        cmb_expence_entered_emp.removeAll();
        try {
            List<M_Employee> allEmployees = employeeController.getAllEmployees();
            for (M_Employee allEmployee : allEmployees) {
                if (allEmployee.getEmp_jobType_id() == 1) {
                    cmb_expence_approved_emp.addItem(allEmployee.getEmp_id() + " : " + allEmployee.getEmp_firstName() + " " + allEmployee.getEmp_middleName() + " " + allEmployee.getEmp_surName() + " [Office]");
                    cmb_expence_entered_emp.addItem(allEmployee.getEmp_id() + " : " + allEmployee.getEmp_firstName() + " " + allEmployee.getEmp_middleName() + " " + allEmployee.getEmp_surName() + " [Office]");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void laodAuthorityCombo() {
        cmb_authority.removeAll();
        try {
            List<M_Employee> allEmployees = employeeController.getAllEmployees();
            for (M_Employee allEmployee : allEmployees) {
                if (allEmployee.getEmp_jobType_id() == 5) {
                    cmb_authority.addItem(allEmployee.getEmp_id() + " : " + allEmployee.getEmp_firstName() + " " + allEmployee.getEmp_middleName() + " " + allEmployee.getEmp_surName() + " [Sub Contractor]");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPurchaserCombo() {
        cmb_purchaser.removeAll();
        try {
            List<M_Purchaser> allPurchasers = purchaserController.getAllPurchasers();
            for (M_Purchaser allPurchaser : allPurchasers) {
                cmb_purchaser.addItem(allPurchaser.getPurchaser_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSiteCombo() {
        cmb_site.removeAll();
        try {
            List<M_Project_Primary> allPrimaryProjects = projectController.getAllPrimaryProjects();
            for (M_Project_Primary allPrimaryProject : allPrimaryProjects) {
                cmb_site.addItem(allPrimaryProject.getProject_primary_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAccountCombo() {
        cmb_companyAccount.removeAll();
        try {
            List<M_Account> allAccounts = accountController.getAllAccounts();
            for (M_Account allAccount : allAccounts) {
                cmb_companyAccount.addItem(allAccount.getAccount_accountName() + " : " + allAccount.getAccount_accountNo());
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadExpencesTable() {
        dtmExpenceTable.setRowCount(0);
        try {
            List<T_Expences> allExpences = expencesController.getAllExpences();
            for (T_Expences allExpence : allExpences) {
                String exDate = "";
                if (allExpence.getExpence_date() != null) {
                    exDate = allExpence.getExpence_date().toString();
                }
                String[] rowData = {exDate, allExpence.getExpence_invoiceNo(), projectController.searchPrimaryProject(allExpence.getExpence_refSiteId()).getProject_primary_name(), Double.toString(allExpence.getExpence_invoiceAmount()), allExpence.getExpence_description()};
                dtmExpenceTable.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void sendToDB() {
        try {
            String desc = txt_expence_description.getText();
            int expenceTypeId = 0;
            if (cmb_expence_type.getSelectedIndex() != 0) {
                expenceTypeId = expenceTypeController.searchExpencesType(cmb_expence_type.getSelectedItem().toString()).getExpencesType_id();
            }
            int exSubType = 0;
            if (cmb_expence_subType.getSelectedIndex() != 0) {
                exSubType = expenceSubTypeController.searchExpencesSubType(cmb_expence_subType.getSelectedItem().toString()).getExpencesSubTytpe_id();
            }
            Date exDate = dp_expenceDate.getDate();
            int purchaserId = 0;
            if (cmb_purchaser.getSelectedIndex() != 0) {
                purchaserId = purchaserController.searchPurchaser(cmb_purchaser.getSelectedItem().toString()).getPurchaser_id();
            }
            String invoiceNo = "";
            if (!txt_invoiceNo.getText().equalsIgnoreCase("enter invoice no / payment certificate no")) {
                invoiceNo = txt_invoiceNo.getText();
            }
            double invoiceAmount = 0;
            if (!"".equals(txt_bilAmount.getText()) && !txt_bilAmount.getText().equalsIgnoreCase("Bill Amount")) {
                invoiceAmount = Double.parseDouble(txt_bilAmount.getText().replaceAll(",", ""));
            }
            double vatAmount = 0;
            if (!"".equals(txt_vatAmount.getText()) && !txt_vatAmount.getText().equalsIgnoreCase("Vat Amount")) {
                vatAmount = Double.parseDouble(txt_vatAmount.getText().replaceAll(",", ""));
            }
            int payMode = 0;
            if (buttonGroup1.getSelection() != null) {
                String payModeName = "";
                if (radio_cash.isSelected()) {
                    payModeName = radio_cash.getText();
                } else {
                    if (radio_cheque.isSelected()) {
                        payModeName = radio_cheque.getText();
                    } else {
                        if (radio_draft.isSelected()) {
                            payModeName = radio_draft.getText();
                        }
                    }
                }
                payMode = paymentModeController.searPaymentMode(payModeName).getPaymentMode_id();
            } else {
                JOptionPane.showMessageDialog(this, "Please Select the Payment Mode.");
            }
            String refNo = txt_refNo.getText();
            Date doi = dp_issue_date.getDate();
            Date dor = dp_receive_date.getDate();
            int authorityId = 0;
            if (cmb_authority.getSelectedIndex() != 0) {
                authorityId = Integer.parseInt(cmb_authority.getSelectedItem().toString().split(" : ")[0]);
            }
            int siteId = 0;
            if (cmb_site.getSelectedIndex() != 0) {
                siteId = projectController.searchPrimaryProjectByName(cmb_site.getSelectedItem().toString()).getProject_id();
            }
            int enteredEmp = 0;
            if (cmb_expence_entered_emp.getSelectedIndex() != 0) {
                enteredEmp = Integer.parseInt(cmb_expence_entered_emp.getSelectedItem().toString().split(" : ")[0]);
            }
            int approvedEmp = 0;
            if (cmb_expence_approved_emp.getSelectedIndex() != 0) {
                approvedEmp = Integer.parseInt(cmb_expence_approved_emp.getSelectedItem().toString().split(" : ")[0]);
            }
            Date enteredDate = dp_entered_date.getDate();
            Date approvedDate = dp_approved_date.getDate();
            int accountId = 0;
            if (cmb_companyAccount.getSelectedIndex() != 0) {
                accountId = accountController.searchAccount(cmb_companyAccount.getSelectedItem().toString().split(" : ")[1]).getAccount_id();
            }
            String status = "P";
            if (cmb_expence_approved_emp.getSelectedIndex() != 0) {
                status = "A";
            }

            if (btn_save_expence.getText().equalsIgnoreCase("Save")) {
                int expenceId = IDGenerator.getNewID("t_expences", "EXPENCES_ID");
                T_Expences expences = new T_Expences(expenceId, desc, expenceTypeId, exSubType, exDate, purchaserId, invoiceNo, invoiceAmount, vatAmount, payMode, refNo, doi, dor, authorityId, siteId, enteredEmp, approvedEmp, enteredDate, approvedDate, status, accountId);
                boolean addExpence = expencesController.addExpence(expences);
                if (addExpence) {
                    JOptionPane.showMessageDialog(this, "Expence Details Saved Successfully..");
                    clearFields();
                    loadExpencesTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Adding Expence Failed.. Please Check Again.");
                }
            } else {
                int expenceId = expencesGlobal.getExpence_id();
                T_Expences expences = new T_Expences(expenceId, desc, expenceTypeId, exSubType, exDate, purchaserId, invoiceNo, invoiceAmount, vatAmount, payMode, refNo, doi, dor, authorityId, siteId, enteredEmp, approvedEmp, enteredDate, approvedDate, status, accountId);
                boolean updateExpence = expencesController.updateExpence(expences);
                if (updateExpence) {
                    expencesController.releaseExpence(expenceId);
                    JOptionPane.showMessageDialog(this, "Expence Details Updated Successfully..");
                    clearFields();
                    loadExpencesTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Updating Expence Details Failed.. Check Again Later.");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
        dp_expenceDate.setDate(null);
        cmb_expence_type.setSelectedIndex(0);
        cmb_expence_subType.setSelectedIndex(0);
        txt_expence_description.setText("");
        cmb_expence_entered_emp.setSelectedIndex(0);
        dp_entered_date.setDate(null);
        cmb_expence_approved_emp.setSelectedIndex(0);
        dp_approved_date.setDate(null);
        dp_issue_date.setDate(null);
        dp_receive_date.setDate(null);
        cmb_purchaser.setSelectedIndex(0);
        txt_invoiceNo.setText("");
        txt_bilAmount.setText("Bill Amount");
        txt_bilAmount.setForeground(Color.GRAY);
        txt_vatAmount.setText("Vat Amount");
        txt_vatAmount.setForeground(Color.GRAY);
        txt_tot.setText("Total");
        txt_tot.setForeground(Color.GRAY);
        cmb_site.setSelectedIndex(0);
        cmb_authority.setSelectedIndex(0);
        buttonGroup1.clearSelection();
        cmb_companyAccount.setSelectedIndex(0);

        btn_save_expence.setText("Save");
        dp_expenceDate.requestFocus();
    }

    private void loadFromExpenceTable() {
        try {
            if (expencesController.reserveExpence(expenceIdPub)) {
                dp_expenceDate.setDate(expencesGlobal.getExpence_date());
                if (expencesGlobal.getExpence_typeId() != 0) {
                    cmb_expence_type.setSelectedItem(expenceTypeController.searchExpencesType(expencesGlobal.getExpence_typeId()).getExpencesType_name());
                } else {
                    cmb_expence_type.setSelectedIndex(0);
                }
                if (expencesGlobal.getExpence_subTypeId() != 0) {
                    cmb_expence_subType.setSelectedItem(expenceSubTypeController.searchExpencesSubType(expencesGlobal.getExpence_subTypeId()).getExpencesSubTytpe_name());
                } else {
                    cmb_expence_subType.setSelectedIndex(0);
                }
                txt_expence_description.setText(expencesGlobal.getExpence_description());
                if (expencesGlobal.getExpence_enteredUser() != 0) {
                    for (int i = 1; i < cmb_expence_entered_emp.getItemCount(); i++) {
                        if (Integer.parseInt(cmb_expence_entered_emp.getItemAt(i).toString().split(" : ")[0]) == expencesGlobal.getExpence_enteredUser()) {
                            cmb_expence_entered_emp.setSelectedIndex(i);
                        }
                    }
                } else {
                    cmb_expence_entered_emp.setSelectedIndex(0);
                }
                dp_entered_date.setDate(expencesGlobal.getExpence_enteredDate());
                if (expencesGlobal.getExpence_approvedUser() != 0) {
                    for (int i = 1; i < cmb_expence_approved_emp.getItemCount(); i++) {
                        if (Integer.parseInt(cmb_expence_approved_emp.getItemAt(i).toString().split(" : ")[0]) == expencesGlobal.getExpence_approvedUser()) {
                            cmb_expence_approved_emp.setSelectedIndex(i);
                        }
                    }
                } else {
                    cmb_expence_approved_emp.setSelectedIndex(0);
                }
                dp_approved_date.setDate(expencesGlobal.getExpence_approvedDate());
                dp_issue_date.setDate(expencesGlobal.getExpence_dateIssued());
                dp_receive_date.setDate(expencesGlobal.getExpence_dateReceived());
                if (expencesGlobal.getExpence_purchaserId() != 0) {
                    cmb_purchaser.setSelectedItem(purchaserController.searchPurchaser(expencesGlobal.getExpence_purchaserId()).getPurchaser_name());
                } else {
                    cmb_purchaser.setSelectedIndex(0);
                }
                txt_invoiceNo.setText(expencesGlobal.getExpence_invoiceNo());
                txt_bilAmount.setText(decimalFormat.format(expencesGlobal.getExpence_invoiceAmount()));
                txt_vatAmount.setText(decimalFormat.format(expencesGlobal.getExpence_vatAmount()));
                txt_tot.setText(decimalFormat.format(expencesGlobal.getExpence_invoiceAmount() + expencesGlobal.getExpence_vatAmount()));
                if (expencesGlobal.getExpence_refSiteId() != 0) {
                    cmb_site.setSelectedItem(projectController.searchPrimaryProject(expencesGlobal.getExpence_refSiteId()).getProject_primary_name());
                } else {
                    cmb_site.setSelectedIndex(0);
                }
                if (expencesGlobal.getExpence_refId() != 0) {
                    for (int i = 1; i < cmb_authority.getItemCount(); i++) {
                        if (Integer.parseInt(cmb_authority.getItemAt(i).toString().split(" : ")[0]) == expencesGlobal.getExpence_refId()) {
                            cmb_authority.setSelectedIndex(i);
                        }
                    }
                } else {
                    cmb_authority.setSelectedIndex(0);
                }
                if (expencesGlobal.getExpence_paymentModeId() == 1) {
                    radio_cash.setSelected(true);
                } else {
                    if (expencesGlobal.getExpence_paymentModeId() == 2) {
                        radio_cheque.setSelected(true);
                    } else {
                        radio_draft.setSelected(true);
                    }
                }
                if (expencesGlobal.getExpence_account() != 0) {
                    for (int i = 1; i < cmb_companyAccount.getItemCount(); i++) {
                        if (accountController.searchAccount(cmb_companyAccount.getItemAt(i).toString().split(" : ")[1]).getAccount_id() == expencesGlobal.getExpence_account()) {
                            cmb_companyAccount.setSelectedIndex(i);
                        }
                    }
                } else {
                    cmb_companyAccount.setSelectedIndex(0);
                }

                btn_save_expence.setText("Update");

            } else {
                JOptionPane.showMessageDialog(this, "This Expence Details are Using by Another Machine at this Moment.. \n Please Try Again in a Moment.");
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchByTableName() {
        try {
            int selectedRow = tbl_expencesInfo.getSelectedRow();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date expenceDate = null;
            int project = 0;
            double amount = 0;
            if (!"".equals(dtmExpenceTable.getValueAt(selectedRow, 0).toString())) {
                expenceDate = sdf.parse(dtmExpenceTable.getValueAt(selectedRow, 0).toString());
            }
            if (!"".equals(dtmExpenceTable.getValueAt(selectedRow, 2).toString())) {
                project = projectController.searchPrimaryProjectByName(dtmExpenceTable.getValueAt(selectedRow, 2).toString()).getProject_id();
            }
            if (!"".equals(dtmExpenceTable.getValueAt(selectedRow, 3).toString())) {
                amount = Double.parseDouble(dtmExpenceTable.getValueAt(selectedRow, 3).toString());
            }

            expencesGlobal = expencesController.searchExpence(expenceDate, project, amount);
            if (expenceIdPub != expencesGlobal.getExpence_id()) {
                expencesController.releaseExpence(expenceIdPub);
            }
            expenceIdPub = expencesGlobal.getExpence_id();
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getTotalAmount() {
        if (!"".equals(txt_bilAmount.getText()) && !txt_bilAmount.getText().equalsIgnoreCase("Bill Amount")) {
            double billAmount = Double.parseDouble(txt_bilAmount.getText().replaceAll(",", ""));
            double vatAmount = Double.parseDouble(txt_vatAmount.getText().replaceAll(",", ""));
            double tot = billAmount + vatAmount;
            txt_tot.setText(decimalFormat.format(tot));
        }
    }

    private void loadSearchProjectCombo() {
        cmb_searchExpences_project.removeAll();
        try {
            List<M_Project_Primary> allPrimaryProjects = projectController.getAllPrimaryProjects();
            for (M_Project_Primary allPrimaryProject : allPrimaryProjects) {
                cmb_searchExpences_project.addItem(allPrimaryProject.getProject_primary_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Expences.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
