/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brotherssoft.samodconstructions.view;

import com.brotherssoft.samodconstructions.controller.M_EmployeeController;
import com.brotherssoft.samodconstructions.controller.M_Project_PrimaryController;
import com.brotherssoft.samodconstructions.controller.R_JobTypeController;
import com.brotherssoft.samodconstructions.controller.R_WorkController;
import com.brotherssoft.samodconstructions.controller.T_AttendanceController;
import com.brotherssoft.samodconstructions.custom.Validation;
import com.brotherssoft.samodconstructions.model.M_Employee;
import com.brotherssoft.samodconstructions.model.R_JobType;
import com.brotherssoft.samodconstructions.model.R_Work;
import com.brotherssoft.samodconstructions.model.T_Attendance;
import com.brotherssoft.samodconstructions.serverconnector.ServerConnector;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akvasoft
 */
public class Employee_Attendence_Approval2 extends javax.swing.JPanel {

    R_JobTypeController jobTypeController;
    R_WorkController workController;
    M_EmployeeController employeeController;
    T_AttendanceController attendanceController;
    M_Project_PrimaryController projectController;

    DefaultTableModel dtmAttendance;
    DefaultTableModel dtmApproval;

    DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
    T_Attendance attendanceGlobal = null;
    public static int attendanceIdPub;
    List<T_Attendance> attendanceListGlobal = new ArrayList();
    JSpinner.DateEditor de1;
    JSpinner.DateEditor de2;
    //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form Employee_Attendence
     */
    public Employee_Attendence_Approval2() throws Exception {
        initComponents();
        lbl_sub_contractor.setVisible(false);
        cmb_sub_contractor.setVisible(false);
        //panel_attendance_details.setVisible(false);
        dp_attendance_date.setFormats("yyyy-MM-dd", "yyyy/MM/dd");
        dp_attendance_approved_date.setFormats("yyyy-MM-dd", "yyyy/MM/dd");
        //btn_att_detail_submit.setVisible(false);
        btn_att_save.setEnabled(false);
        Employee_View_Panel.setVisible(true);
        Company_Account_Registration.setVisible(false);

        jobTypeController = ServerConnector.getServerConnetor().getJobTypeController();
        workController = ServerConnector.getServerConnetor().getWorkController();
        employeeController = ServerConnector.getServerConnetor().getEmployeeController();
        attendanceController = ServerConnector.getServerConnetor().getAttendanceController();
        projectController = ServerConnector.getServerConnetor().getPrimary_ProjectController();

        dtmAttendance = (DefaultTableModel) table_attendance.getModel();
        dtmApproval = (DefaultTableModel) tbl_attApproval.getModel();
        de1 = new JSpinner.DateEditor(spinner_in, "HH:mm a");
        de2 = new JSpinner.DateEditor(spinner_out, "HH:mm a");

        loadJobTypeCombo();
        loadWorkCombo();
        loadEmployeeCombo();
        loadAttApprovalTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Company_Account_Registration = new javax.swing.JPanel();
        bank_panel_hedding2 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        bank_panel_input_area1 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        cmb_emp_cate = new javax.swing.JComboBox<>();
        dp_attendance_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel133 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_attendance = new org.jdesktop.swingx.JXTable();
        lbl_sub_contractor = new javax.swing.JLabel();
        cmb_sub_contractor = new javax.swing.JComboBox<>();
        panel_attendance_details = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_advance = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_ot = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmb_work = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_comment = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        txt_daily_rate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_ot_rate = new javax.swing.JTextField();
        Date date = new Date();
        SpinnerDateModel sdm = new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        spinner_in = new javax.swing.JSpinner(sdm);
        Date dateout = new Date();
        SpinnerDateModel sdmout = new SpinnerDateModel(dateout, null, null, Calendar.HOUR_OF_DAY);
        spinner_out = new javax.swing.JSpinner(sdmout);
        jLabel14 = new javax.swing.JLabel();
        txt_days = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cmb_approveded_emp = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        dp_attendance_approved_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        btn_att_save = new javax.swing.JButton();
        btn_att_reject = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cmb_added_emp = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        dp_attendance_added_date = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();
        Employee_View_Panel = new javax.swing.JPanel();
        bank_panel_hedding5 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        tbl_panel_Branch2 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_attApproval = new javax.swing.JTable();

        Company_Account_Registration.setBackground(new java.awt.Color(255, 255, 255));
        Company_Account_Registration.setPreferredSize(new java.awt.Dimension(1050, 710));

        bank_panel_hedding2.setBackground(new java.awt.Color(122, 72, 222));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 204, 255));
        jLabel19.setText("Administrations / System Management / Operations/");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 204, 204));
        jLabel20.setText("Employee Attendence Approval");

        javax.swing.GroupLayout bank_panel_hedding2Layout = new javax.swing.GroupLayout(bank_panel_hedding2);
        bank_panel_hedding2.setLayout(bank_panel_hedding2Layout);
        bank_panel_hedding2Layout.setHorizontalGroup(
            bank_panel_hedding2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(509, Short.MAX_VALUE))
            .addGroup(bank_panel_hedding2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8)
                .addContainerGap())
        );
        bank_panel_hedding2Layout.setVerticalGroup(
            bank_panel_hedding2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        bank_panel_input_area1.setBackground(new java.awt.Color(255, 255, 255));
        bank_panel_input_area1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Marked Attendence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        bank_panel_input_area1.setPreferredSize(new java.awt.Dimension(528, 569));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel26.setText("Category");

        cmb_emp_cate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_emp_cate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Employee Category -" }));
        cmb_emp_cate.setEnabled(false);
        cmb_emp_cate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_emp_cateActionPerformed(evt);
            }
        });

        dp_attendance_date.setEnabled(false);
        dp_attendance_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_attendance_dateActionPerformed(evt);
            }
        });

        jLabel133.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel133.setText("Date");

        table_attendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Boolean(false), null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Select", "Name", "Project", "Nic"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_attendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_attendanceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_attendance);

        lbl_sub_contractor.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lbl_sub_contractor.setText("Sub Contarctor");

        cmb_sub_contractor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_sub_contractor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Sub Contractor -" }));
        cmb_sub_contractor.setEnabled(false);
        cmb_sub_contractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sub_contractorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bank_panel_input_area1Layout = new javax.swing.GroupLayout(bank_panel_input_area1);
        bank_panel_input_area1.setLayout(bank_panel_input_area1Layout);
        bank_panel_input_area1Layout.setHorizontalGroup(
            bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_input_area1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(bank_panel_input_area1Layout.createSequentialGroup()
                        .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_emp_cate, 0, 375, Short.MAX_VALUE)
                            .addComponent(dp_attendance_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(bank_panel_input_area1Layout.createSequentialGroup()
                        .addComponent(lbl_sub_contractor)
                        .addGap(24, 24, 24)
                        .addComponent(cmb_sub_contractor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bank_panel_input_area1Layout.setVerticalGroup(
            bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bank_panel_input_area1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dp_attendance_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_emp_cate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_input_area1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_sub_contractor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_sub_contractor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );

        bank_panel_input_area1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmb_emp_cate, dp_attendance_date});

        panel_attendance_details.setBackground(new java.awt.Color(255, 255, 255));
        panel_attendance_details.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Attendence Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setText("Advance");
        jLabel2.setEnabled(false);
        jLabel2.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_advance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_advance.setEnabled(false);
        txt_advance.setPreferredSize(new java.awt.Dimension(59, 25));
        txt_advance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_advanceActionPerformed(evt);
            }
        });
        txt_advance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_advanceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_advanceKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Out");
        jLabel3.setEnabled(false);
        jLabel3.setPreferredSize(new java.awt.Dimension(34, 25));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("In");
        jLabel4.setEnabled(false);
        jLabel4.setPreferredSize(new java.awt.Dimension(34, 25));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Over Time");
        jLabel5.setEnabled(false);
        jLabel5.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_ot.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ot.setEnabled(false);
        txt_ot.setPreferredSize(new java.awt.Dimension(59, 25));
        txt_ot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_otActionPerformed(evt);
            }
        });
        txt_ot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_otKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_otKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setText("Work");
        jLabel6.setEnabled(false);
        jLabel6.setPreferredSize(new java.awt.Dimension(34, 25));

        cmb_work.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_work.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Work -" }));
        cmb_work.setEnabled(false);
        cmb_work.setPreferredSize(new java.awt.Dimension(56, 25));
        cmb_work.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_workActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel7.setText("Comment");
        jLabel7.setEnabled(false);
        jLabel7.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_comment.setColumns(20);
        txt_comment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_comment.setRows(3);
        txt_comment.setEnabled(false);
        jScrollPane2.setViewportView(txt_comment);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel12.setText("Daily Rate");
        jLabel12.setEnabled(false);
        jLabel12.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_daily_rate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_daily_rate.setEnabled(false);
        txt_daily_rate.setPreferredSize(new java.awt.Dimension(59, 25));
        txt_daily_rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_daily_rateActionPerformed(evt);
            }
        });
        txt_daily_rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_daily_rateKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_daily_rateKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel13.setText("OT Rate");
        jLabel13.setEnabled(false);
        jLabel13.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_ot_rate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ot_rate.setEnabled(false);
        txt_ot_rate.setPreferredSize(new java.awt.Dimension(59, 25));
        txt_ot_rate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_ot_rateMouseClicked(evt);
            }
        });
        txt_ot_rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ot_rateActionPerformed(evt);
            }
        });
        txt_ot_rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ot_rateKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ot_rateKeyReleased(evt);
            }
        });

        JSpinner.DateEditor de = new JSpinner.DateEditor(spinner_in, "HH:mm a");
        spinner_in.setEditor(de);
        spinner_in.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinner_in.setEnabled(false);
        spinner_in.setPreferredSize(new java.awt.Dimension(29, 25));
        spinner_in.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spinner_inMouseClicked(evt);
            }
        });

        JSpinner.DateEditor deOut = new JSpinner.DateEditor(spinner_out, "HH:mm a");
        spinner_out.setEditor(deOut);
        spinner_out.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinner_out.setEnabled(false);
        spinner_out.setPreferredSize(new java.awt.Dimension(29, 25));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel14.setText("Days");
        jLabel14.setEnabled(false);
        jLabel14.setPreferredSize(new java.awt.Dimension(34, 25));

        txt_days.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_days.setEnabled(false);
        txt_days.setPreferredSize(new java.awt.Dimension(59, 25));
        txt_days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_daysActionPerformed(evt);
            }
        });
        txt_days.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_daysKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_daysKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panel_attendance_detailsLayout = new javax.swing.GroupLayout(panel_attendance_details);
        panel_attendance_details.setLayout(panel_attendance_detailsLayout);
        panel_attendance_detailsLayout.setHorizontalGroup(
            panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_attendance_detailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_attendance_detailsLayout.createSequentialGroup()
                        .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_ot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_work, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)))
                    .addGroup(panel_attendance_detailsLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(384, 384, 384))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_attendance_detailsLayout.createSequentialGroup()
                        .addGap(0, 105, Short.MAX_VALUE)
                        .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_advance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinner_out, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinner_in, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ot_rate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_daily_rate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_days, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panel_attendance_detailsLayout.setVerticalGroup(
            panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_attendance_detailsLayout.createSequentialGroup()
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_days, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_daily_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ot_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_advance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_work, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_attendance_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Authority", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        cmb_approveded_emp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_approveded_emp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Approved Employee -" }));
        cmb_approveded_emp.setPreferredSize(new java.awt.Dimension(56, 25));
        cmb_approveded_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_approveded_empActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel8.setText("Approved By");
        jLabel8.setPreferredSize(new java.awt.Dimension(34, 25));

        dp_attendance_approved_date.setPreferredSize(new java.awt.Dimension(112, 25));
        dp_attendance_approved_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_attendance_approved_dateActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("Approved Date");
        jLabel10.setPreferredSize(new java.awt.Dimension(34, 25));

        btn_att_save.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_att_save.setText("Approve");
        btn_att_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_att_saveActionPerformed(evt);
            }
        });

        btn_att_reject.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_att_reject.setText("Reject");
        btn_att_reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_att_rejectActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel9.setText("Added By");
        jLabel9.setEnabled(false);
        jLabel9.setPreferredSize(new java.awt.Dimension(34, 25));

        cmb_added_emp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_added_emp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Added Employee -" }));
        cmb_added_emp.setEnabled(false);
        cmb_added_emp.setPreferredSize(new java.awt.Dimension(56, 25));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel11.setText("Added Date");
        jLabel11.setEnabled(false);
        jLabel11.setPreferredSize(new java.awt.Dimension(34, 25));

        dp_attendance_added_date.setEnabled(false);
        dp_attendance_added_date.setPreferredSize(new java.awt.Dimension(112, 25));
        dp_attendance_added_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dp_attendance_added_dateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dp_attendance_approved_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_approveded_emp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dp_attendance_added_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_added_emp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_att_reject, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_att_save, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_added_emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dp_attendance_added_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_approveded_emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dp_attendance_approved_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_att_save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_att_reject, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Back to Approval List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Company_Account_RegistrationLayout = new javax.swing.GroupLayout(Company_Account_Registration);
        Company_Account_Registration.setLayout(Company_Account_RegistrationLayout);
        Company_Account_RegistrationLayout.setHorizontalGroup(
            Company_Account_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Company_Account_RegistrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Company_Account_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bank_panel_input_area1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Company_Account_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_attendance_details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(bank_panel_hedding2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Company_Account_RegistrationLayout.setVerticalGroup(
            Company_Account_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Company_Account_RegistrationLayout.createSequentialGroup()
                .addComponent(bank_panel_hedding2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Company_Account_RegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Company_Account_RegistrationLayout.createSequentialGroup()
                        .addComponent(panel_attendance_details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Company_Account_RegistrationLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bank_panel_input_area1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        Employee_View_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Employee_View_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        bank_panel_hedding5.setBackground(new java.awt.Color(122, 72, 222));

        jLabel60.setBackground(new java.awt.Color(255, 255, 255));
        jLabel60.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(204, 204, 255));
        jLabel60.setText("Administrations / System Management / Master Detail / Employee Manager");

        jLabel61.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(204, 204, 204));
        jLabel61.setText("Show All Employees");

        javax.swing.GroupLayout bank_panel_hedding5Layout = new javax.swing.GroupLayout(bank_panel_hedding5);
        bank_panel_hedding5.setLayout(bank_panel_hedding5Layout);
        bank_panel_hedding5Layout.setHorizontalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addGroup(bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bank_panel_hedding5Layout.setVerticalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel61)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tbl_panel_Branch2.setBackground(new java.awt.Color(255, 255, 255));
        tbl_panel_Branch2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Approval Pending Attendance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbl_attApproval.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbl_attApproval.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Attendance Date", "Employee Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_attApproval.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbl_attApproval.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_attApprovalMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_attApproval);

        javax.swing.GroupLayout tbl_panel_Branch2Layout = new javax.swing.GroupLayout(tbl_panel_Branch2);
        tbl_panel_Branch2.setLayout(tbl_panel_Branch2Layout);
        tbl_panel_Branch2Layout.setHorizontalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tbl_panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
                .addContainerGap())
        );
        tbl_panel_Branch2Layout.setVerticalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tbl_panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Employee_View_PanelLayout = new javax.swing.GroupLayout(Employee_View_Panel);
        Employee_View_Panel.setLayout(Employee_View_PanelLayout);
        Employee_View_PanelLayout.setHorizontalGroup(
            Employee_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Employee_View_PanelLayout.createSequentialGroup()
                .addGroup(Employee_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Employee_View_PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Employee_View_PanelLayout.setVerticalGroup(
            Employee_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Employee_View_PanelLayout.createSequentialGroup()
                .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(Company_Account_Registration, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Employee_View_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Company_Account_Registration, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Employee_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Company_Account_Registration, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Employee_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_att_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_att_saveActionPerformed
        transferAttendance();
    }//GEN-LAST:event_btn_att_saveActionPerformed

    private void cmb_emp_cateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_emp_cateActionPerformed
        loadStaffToAttendance();
    }//GEN-LAST:event_cmb_emp_cateActionPerformed

    private void dp_attendance_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_attendance_dateActionPerformed
        loadAttendanceByDate();
    }//GEN-LAST:event_dp_attendance_dateActionPerformed

    private void dp_attendance_approved_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_attendance_approved_dateActionPerformed
    }//GEN-LAST:event_dp_attendance_approved_dateActionPerformed

    private void cmb_sub_contractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sub_contractorActionPerformed
        loadSubContractorStaffToAttendanceTable();
    }//GEN-LAST:event_cmb_sub_contractorActionPerformed

    private void table_attendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_attendanceMouseClicked
        viewAttendanceDetails();
    }//GEN-LAST:event_table_attendanceMouseClicked

    private void txt_daily_rateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_daily_rateKeyPressed
        Validation.priceText(txt_daily_rate);
    }//GEN-LAST:event_txt_daily_rateKeyPressed

    private void txt_daily_rateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_daily_rateKeyReleased
        Validation.priceText(txt_daily_rate);
    }//GEN-LAST:event_txt_daily_rateKeyReleased

    private void txt_ot_rateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ot_rateKeyPressed
        Validation.priceText(txt_ot_rate);
    }//GEN-LAST:event_txt_ot_rateKeyPressed

    private void txt_ot_rateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ot_rateKeyReleased
        Validation.priceText(txt_ot_rate);
    }//GEN-LAST:event_txt_ot_rateKeyReleased

    private void txt_advanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_advanceKeyPressed
        Validation.priceText(txt_advance);
    }//GEN-LAST:event_txt_advanceKeyPressed

    private void txt_advanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_advanceKeyReleased
        Validation.priceText(txt_advance);
    }//GEN-LAST:event_txt_advanceKeyReleased

    private void txt_otKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_otKeyPressed
        Validation.priceText(txt_ot);
    }//GEN-LAST:event_txt_otKeyPressed

    private void txt_otKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_otKeyReleased
        Validation.priceText(txt_ot);
    }//GEN-LAST:event_txt_otKeyReleased

    private void txt_daily_rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_daily_rateActionPerformed
        decimalFormat.format(txt_daily_rate);
        txt_ot_rate.requestFocus();
    }//GEN-LAST:event_txt_daily_rateActionPerformed

    private void txt_ot_rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ot_rateActionPerformed
        decimalFormat.format(txt_ot_rate);
        spinner_in.requestFocus();
    }//GEN-LAST:event_txt_ot_rateActionPerformed

    private void txt_advanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_advanceActionPerformed
        decimalFormat.format(txt_advance);
        txt_ot.requestFocus();
    }//GEN-LAST:event_txt_advanceActionPerformed

    private void txt_otActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_otActionPerformed
        decimalFormat.format(txt_ot);
        cmb_work.requestFocus();
    }//GEN-LAST:event_txt_otActionPerformed

    private void cmb_workActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_workActionPerformed
        txt_comment.requestFocus();
    }//GEN-LAST:event_cmb_workActionPerformed

    private void txt_ot_rateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_ot_rateMouseClicked
        decimalFormat.format(txt_daily_rate);
    }//GEN-LAST:event_txt_ot_rateMouseClicked

    private void spinner_inMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinner_inMouseClicked
        decimalFormat.format(txt_ot_rate);
    }//GEN-LAST:event_spinner_inMouseClicked

    private void btn_att_rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_att_rejectActionPerformed
        List<T_Attendance> attendanceListGlobal1 = attendanceListGlobal;
        System.out.println(attendanceListGlobal.size());
        boolean updated = true;
        for (T_Attendance t_Attendance : attendanceListGlobal1) {
            t_Attendance.setAttendance_processed("PENDING");
            if (updated) {
                try {
                    boolean updateAttendance = attendanceController.updateAttendance(t_Attendance);
                    if (updateAttendance) {
                        updated = true;
                    } else {
                        updated = false;
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (updated) {
            JOptionPane.showMessageDialog(this, "Attendance Rejected & Sent to Recorrection..");
            clearFields();
        } else {
            JOptionPane.showMessageDialog(this, "Error Occured.. Please Check Again.");
        }
        clearSubmitDetails();
        clearFields();
        loadAttApprovalTable();
        Employee_View_Panel.setVisible(true);
        Company_Account_Registration.setVisible(false);
    }//GEN-LAST:event_btn_att_rejectActionPerformed

    private void dp_attendance_added_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dp_attendance_added_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dp_attendance_added_dateActionPerformed

    private void cmb_approveded_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_approveded_empActionPerformed
        if (cmb_approveded_emp.getSelectedIndex() != 0) {
            btn_att_save.setEnabled(true);
        }
    }//GEN-LAST:event_cmb_approveded_empActionPerformed

    private void tbl_attApprovalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_attApprovalMouseClicked
        clearSubmitDetails();
        clearFields();
        loadAttFromTable();
        Employee_View_Panel.setVisible(false);
        Company_Account_Registration.setVisible(true);
    }//GEN-LAST:event_tbl_attApprovalMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clearSubmitDetails();
        clearFields();
        loadAttApprovalTable();
        Employee_View_Panel.setVisible(true);
        Company_Account_Registration.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_daysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_daysActionPerformed

    private void txt_daysKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_daysKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_daysKeyPressed

    private void txt_daysKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_daysKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_daysKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Company_Account_Registration;
    private javax.swing.JPanel Employee_View_Panel;
    private javax.swing.JPanel bank_panel_hedding2;
    private javax.swing.JPanel bank_panel_hedding5;
    private javax.swing.JPanel bank_panel_input_area1;
    private javax.swing.JButton btn_att_reject;
    private javax.swing.JButton btn_att_save;
    private javax.swing.JComboBox<String> cmb_added_emp;
    private javax.swing.JComboBox<String> cmb_approveded_emp;
    private javax.swing.JComboBox<String> cmb_emp_cate;
    private javax.swing.JComboBox<String> cmb_sub_contractor;
    private javax.swing.JComboBox<String> cmb_work;
    private org.jdesktop.swingx.JXDatePicker dp_attendance_added_date;
    private org.jdesktop.swingx.JXDatePicker dp_attendance_approved_date;
    private org.jdesktop.swingx.JXDatePicker dp_attendance_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lbl_sub_contractor;
    private javax.swing.JPanel panel_attendance_details;
    private javax.swing.JSpinner spinner_in;
    private javax.swing.JSpinner spinner_out;
    private org.jdesktop.swingx.JXTable table_attendance;
    private javax.swing.JTable tbl_attApproval;
    private javax.swing.JPanel tbl_panel_Branch2;
    private javax.swing.JTextField txt_advance;
    private javax.swing.JTextArea txt_comment;
    private javax.swing.JTextField txt_daily_rate;
    private javax.swing.JTextField txt_days;
    private javax.swing.JTextField txt_ot;
    private javax.swing.JTextField txt_ot_rate;
    // End of variables declaration//GEN-END:variables

    private void setTimeChooser() {
        Date date = new Date();
        SpinnerDateModel sdm = new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
//        JSpinner.DateEditor de = new JSpinner.DateEditor(timer_in, "HH:mm a");
//        timer_in.setEditor(de);

    }

    private void loadJobTypeCombo() {
        cmb_emp_cate.removeAll();
        try {
            List<R_JobType> allJobTypes = jobTypeController.getAllJobTypes();
            for (R_JobType allJobType : allJobTypes) {
                cmb_emp_cate.addItem(allJobType.getJobType_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadWorkCombo() {
        cmb_work.removeAll();
        try {
            List<R_Work> allWorks = workController.getAllWorks();
            for (R_Work allWork : allWorks) {
                cmb_work.addItem(allWork.getWork_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadEmployeeCombo() {
        cmb_approveded_emp.removeAll();
        try {
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                if (allLastAddedEmployee.getEmp_jobType_id() == 1) {
                    cmb_approveded_emp.addItem(allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName() + " " + allLastAddedEmployee.getEmp_surName());
                    cmb_added_emp.addItem(allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName() + " " + allLastAddedEmployee.getEmp_surName());
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSubContractorStaffToAttendanceTable() {
        cmb_approveded_emp.setSelectedIndex(0);
        dp_attendance_approved_date.setDate(null);
        attendanceListGlobal = new ArrayList<>();
        if (cmb_sub_contractor.getSelectedIndex() != 0) {
            dtmAttendance.setRowCount(0);
            try {
                List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
                List<T_Attendance> allAttendances = attendanceController.getAllAttendances(dp_attendance_date.getDate(), 2);
                int subContractorId = Integer.parseInt(cmb_sub_contractor.getSelectedItem().toString().split(" : ")[0]);
                boolean status = false;

                M_Employee attEmp = null;

                for (T_Attendance allAttendance : allAttendances) {
                    if (allAttendance.getAttendance_status().equalsIgnoreCase("1")) {
                        status = true;
                    } else {
                        status = false;
                    }

                    for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                        if (allAttendance.getAttendance_employeeId() == allLastAddedEmployee.getEmp_id() && allLastAddedEmployee.getEmp_subContractor_id() == subContractorId) {
                            attEmp = allLastAddedEmployee;
                            attendanceListGlobal.add(allAttendance);
                            break;
                        }
                    }
                    Object[] rowData = {status, attEmp.getEmp_initials() + " " + attEmp.getEmp_firstName(), projectController.searchPrimaryProject(attEmp.getEmp_site_id()).getProject_primary_name(), attEmp.getEmp_NIC()};
                    dtmAttendance.addRow(rowData);
                    if (allAttendance.getAttendance_approvedBy() != 0) {
                        for (int i = 1; i < cmb_approveded_emp.getItemCount(); i++) {
                            if (allAttendance.getAttendance_approvedBy() == Integer.parseInt(cmb_approveded_emp.getItemAt(i).toString().split(" : ")[0])) {
                                cmb_approveded_emp.setSelectedIndex(i);
                                dp_attendance_approved_date.setDate(allAttendance.getAttendance_approvedDate());
//                                break;
                            }
                        }
                    } else {
                        cmb_approveded_emp.setSelectedIndex(0);
                        dp_attendance_approved_date.setDate(null);
//                        break;
                    }
                    if (allAttendance.getAttendance_enteredBy() != 0) {
                        for (int i = 1; i < cmb_added_emp.getItemCount(); i++) {
                            if (allAttendance.getAttendance_enteredBy() == Integer.parseInt(cmb_added_emp.getItemAt(i).toString().split(" : ")[0])) {
                                cmb_added_emp.setSelectedIndex(i);
                                dp_attendance_added_date.setDate(allAttendance.getAttendance_enteredDate());
//                                    break;
                            }
                        }
                    } else {
                        cmb_added_emp.setSelectedIndex(0);
                        dp_attendance_added_date.setDate(null);
//                            break;
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void loadStaffToAttendance() {
        cmb_approveded_emp.setSelectedIndex(0);
        dp_attendance_approved_date.setDate(null);
        attendanceListGlobal = new ArrayList<>();
        dtmAttendance.setRowCount(0);
        try {
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
//            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
//                
//            }
            if (cmb_emp_cate.getSelectedIndex() != 0) {
                int jobTypeId = jobTypeController.searchJobType(cmb_emp_cate.getSelectedItem().toString()).getJobType_id();
                Date attDate = dp_attendance_date.getDate();
                boolean status = false;
                M_Employee attEmp = null;

                if (jobTypeId != 2) {
                    List<T_Attendance> allAttendances1 = attendanceController.getAllAttendances(attDate, jobTypeId);
                    for (T_Attendance t_Attendance : allAttendances1) {
                        if (t_Attendance.getAttendance_status().equalsIgnoreCase("1")) {
                            status = true;
                        } else {
                            status = false;
                        }
                        for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                            if (t_Attendance.getAttendance_employeeId() == allLastAddedEmployee.getEmp_id()) {
                                attEmp = allLastAddedEmployee;
                                attendanceListGlobal.add(t_Attendance);
                                break;
                            }
                        }
                        Object[] rowData = {status, attEmp.getEmp_initials() + " " + attEmp.getEmp_firstName(), projectController.searchPrimaryProject(attEmp.getEmp_site_id()).getProject_primary_name(), attEmp.getEmp_NIC()};
                        dtmAttendance.addRow(rowData);
                        if (t_Attendance.getAttendance_approvedBy() != 0) {
                            for (int i = 1; i < cmb_approveded_emp.getItemCount(); i++) {
                                if (t_Attendance.getAttendance_approvedBy() == Integer.parseInt(cmb_approveded_emp.getItemAt(i).toString().split(" : ")[0])) {
                                    cmb_approveded_emp.setSelectedIndex(i);
                                    dp_attendance_approved_date.setDate(t_Attendance.getAttendance_approvedDate());
//                                    break;
                                }
                            }
                        } else {
                            cmb_approveded_emp.setSelectedIndex(0);
                            dp_attendance_approved_date.setDate(null);
//                            break;
                        }
                        if (t_Attendance.getAttendance_enteredBy() != 0) {
                            for (int i = 1; i < cmb_added_emp.getItemCount(); i++) {
                                if (t_Attendance.getAttendance_enteredBy() == Integer.parseInt(cmb_added_emp.getItemAt(i).toString().split(" : ")[0])) {
                                    cmb_added_emp.setSelectedIndex(i);
                                    dp_attendance_added_date.setDate(t_Attendance.getAttendance_enteredDate());
//                                    break;
                                }
                            }
                        } else {
                            cmb_added_emp.setSelectedIndex(0);
                            dp_attendance_added_date.setDate(null);
//                            break;
                        }
                    }
                } else {
                    lbl_sub_contractor.setVisible(true);
                    cmb_sub_contractor.setVisible(true);
                    for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                        if (allLastAddedEmployee.getEmp_jobType_id() == 5) {
                            cmb_sub_contractor.addItem(allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName() + " " + allLastAddedEmployee.getEmp_surName());
                        }
                    }
                }
            }
            System.out.println("))))))))" + attendanceListGlobal.size());
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAttendanceByDate() {
        cmb_approveded_emp.setSelectedIndex(0);
        dp_attendance_approved_date.setDate(null);
        attendanceListGlobal = new ArrayList<>();
        cmb_emp_cate.setSelectedIndex(0);
        dtmAttendance.setRowCount(0);
        //System.out.println("DDDDDDDD" + sdf.format(dp_attendance_date.getDate()));
        boolean status = false;
        Date attDate = dp_attendance_date.getDate();
        M_Employee attEmp = null;
        try {
            List<T_Attendance> allAttendancesByDate = attendanceController.getAllAttendancesByDate(attDate);
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (T_Attendance t_Attendance : allAttendancesByDate) {
                if (t_Attendance.getAttendance_status().equalsIgnoreCase("1")) {
                    status = true;
                } else {
                    status = false;
                }
                for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                    if (t_Attendance.getAttendance_employeeId() == allLastAddedEmployee.getEmp_id()) {
                        attEmp = allLastAddedEmployee;
                        attendanceListGlobal.add(t_Attendance);
                        break;
                    }
                }
                Object[] rowData = {status, attEmp.getEmp_initials() + " " + attEmp.getEmp_firstName(), projectController.searchPrimaryProject(attEmp.getEmp_site_id()).getProject_primary_name(), attEmp.getEmp_NIC()};
                dtmAttendance.addRow(rowData);
                if (t_Attendance.getAttendance_approvedBy() != 0) {
                    for (int i = 1; i < cmb_approveded_emp.getItemCount(); i++) {
                        if (t_Attendance.getAttendance_approvedBy() == Integer.parseInt(cmb_approveded_emp.getItemAt(i).toString().split(" : ")[0])) {
                            cmb_approveded_emp.setSelectedIndex(i);
                            dp_attendance_approved_date.setDate(t_Attendance.getAttendance_approvedDate());
//                            break;
                        }
                    }
                } else {
                    cmb_approveded_emp.setSelectedIndex(0);
                    dp_attendance_approved_date.setDate(null);
//                    break;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewAttendanceDetails() {
        try {
            int selectedRow = table_attendance.getSelectedRow();
            String nic = dtmAttendance.getValueAt(selectedRow, 3).toString();
            int empId = 0;
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                if (allLastAddedEmployee.getEmp_NIC().equalsIgnoreCase(nic)) {
                    empId = allLastAddedEmployee.getEmp_id();
                    break;
                }
            }
            T_Attendance searchAttendance = attendanceController.searchAttendance(dp_attendance_date.getDate(), empId);
            attendanceGlobal = searchAttendance;
            txt_days.setText(decimalFormat.format(searchAttendance.getAttendance_days()));
            txt_daily_rate.setText(decimalFormat.format(searchAttendance.getAttendance_dailyRate()));
            txt_ot_rate.setText(decimalFormat.format(searchAttendance.getAttendance_otRate()));
            if (searchAttendance.getAttendance_in() != null && !"".equals(searchAttendance.getAttendance_in())) {
                spinner_in.setValue(de1.getFormat().parse(searchAttendance.getAttendance_in()));
            }
            if (searchAttendance.getAttendance_out() != null && !"".equals(searchAttendance.getAttendance_out())) {
                spinner_out.setValue(de2.getFormat().parse(searchAttendance.getAttendance_out()));
            }
            txt_advance.setText(decimalFormat.format(searchAttendance.getAttendance_advance()));
            txt_ot.setText(decimalFormat.format(searchAttendance.getAttendance_ot()));
            if (searchAttendance.getAttendance_workId() != 0) {
                cmb_work.setSelectedItem(workController.searchWork(searchAttendance.getAttendance_workId()).getWork_name());
            } else {
                cmb_work.setSelectedIndex(0);
            }
            txt_comment.setText(searchAttendance.getAttendance_comment());

            //btn_att_detail_submit.setText("Update");
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void submitAttendanceDetails() {
        try {
            double dailyRate = 0;
            if (!"".equals(txt_daily_rate.getText())) {
                dailyRate = Double.parseDouble(txt_daily_rate.getText().replaceAll(",", ""));
            }
            double otRate = 0;
            if (!"".equals(txt_ot_rate.getText())) {
                otRate = Double.parseDouble(txt_ot_rate.getText().replaceAll(",", ""));
            }
            String in = de1.getFormat().format(spinner_in.getValue());
            String out = de2.getFormat().format(spinner_out.getValue());
            double advance = 0;
            if (!"".equals(txt_advance.getText())) {
                advance = Double.parseDouble(txt_advance.getText().replaceAll(",", ""));
            }
            double ot = 0;
            if (!"".equals(txt_ot.getText())) {
                ot = Double.parseDouble(txt_ot.getText().replaceAll(",", ""));
            }
            int workId = 0;
            if (cmb_work.getSelectedIndex() != 0) {
                workId = workController.searchWork(cmb_work.getSelectedItem().toString()).getWork_id();
            }
            String comment = txt_comment.getText();

            for (int i = 0; i < attendanceListGlobal.size(); i++) {
                if (attendanceListGlobal.get(i).getAttendance_employeeId() == attendanceGlobal.getAttendance_employeeId()) {
                    attendanceListGlobal.get(i).setAttendance_dailyRate(dailyRate);
                    attendanceListGlobal.get(i).setAttendance_otRate(otRate);
                    attendanceListGlobal.get(i).setAttendance_in(in);
                    attendanceListGlobal.get(i).setAttendance_out(out);
                    attendanceListGlobal.get(i).setAttendance_advance(advance);
                    attendanceListGlobal.get(i).setAttendance_ot(ot);
                    attendanceListGlobal.get(i).setAttendance_workId(workId);
                    attendanceListGlobal.get(i).setAttendance_comment(comment);
                    break;
                }
            }
            boolean updateAttendance = attendanceController.updateAttendance(attendanceGlobal);
            if (updateAttendance) {
                JOptionPane.showMessageDialog(this, "Attendance Details for this Employee Updated Successfully..");
                clearSubmitDetails();
                //btn_att_detail_submit.setText("Submit");
            } else {
                JOptionPane.showMessageDialog(this, "Updating Attendance Details Failed.. Please Check Again.");
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void transferAttendance() {
        try {

            int approvedEmp = 0;
            if (cmb_approveded_emp.getSelectedIndex() != 0) {
                approvedEmp = Integer.parseInt(cmb_approveded_emp.getSelectedItem().toString().split(" : ")[0]);
            } else {
                JOptionPane.showMessageDialog(this, "Please Select Approved Employee & Date.");
                btn_att_save.setEnabled(false);
            }
            Date approvedDate = dp_attendance_approved_date.getDate();

            List<T_Attendance> attendanceListGlobal1 = attendanceListGlobal;
            System.out.println(attendanceListGlobal.size());
            boolean updated = true;
            for (T_Attendance t_Attendance : attendanceListGlobal1) {
                t_Attendance.setAttendance_approvedBy(approvedEmp);
                t_Attendance.setAttendance_approvedDate(approvedDate);
                t_Attendance.setAttendance_processed("APPROVED");
                if (updated) {
                    boolean updateAttendance = attendanceController.updateAttendance(t_Attendance);
                    if (updateAttendance) {
                        updated = true;
                    } else {
                        updated = false;
                    }
                }
            }
            if (updated) {
                JOptionPane.showMessageDialog(this, "Attendance Approved Successfully..");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Error Occured.. Please Check Again.");
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_Approval2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearSubmitDetails() {
        txt_daily_rate.setText("");
        txt_ot_rate.setText("");
        txt_advance.setText("");
        txt_ot.setText("");
        cmb_work.setSelectedIndex(0);
        txt_comment.setText("");

        txt_daily_rate.requestFocus();
    }

    private void clearFields() {
        cmb_approveded_emp.setSelectedIndex(0);
        dp_attendance_approved_date.setDate(null);
        dp_attendance_date.setDate(null);
        cmb_emp_cate.setSelectedIndex(0);
        cmb_sub_contractor.setSelectedIndex(0);
        dtmAttendance.setRowCount(0);

        dp_attendance_date.requestFocus();
        
        lbl_sub_contractor.setVisible(false);
        cmb_sub_contractor.setVisible(false);
        btn_att_save.setEnabled(false);
    }

    private void loadAttFromTable() {
        try {
            attendanceListGlobal = new ArrayList<>();
            dtmAttendance.setRowCount(0);
            cmb_sub_contractor.removeAll();
            cmb_added_emp.setSelectedIndex(0);
            dp_attendance_added_date.setDate(null);
            cmb_added_emp.setSelectedIndex(0);
            dp_attendance_added_date.setDate(null);

            int selectedRow = tbl_attApproval.getSelectedRow();
            Date attDate = new SimpleDateFormat("yyyy-MM-dd").parse(dtmApproval.getValueAt(selectedRow, 0).toString());
            int jobTypeid = jobTypeController.searchJobType(dtmApproval.getValueAt(selectedRow, 1).toString().split(" : ")[0]).getJobType_id();
            List<T_Attendance> allAttendances = attendanceController.getAllAttendances(attDate, jobTypeid);

            dp_attendance_date.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(dtmApproval.getValueAt(selectedRow, 0).toString()));
            if (jobTypeid != 2) {
                dp_attendance_added_date.setDate(attDate);
                cmb_emp_cate.setSelectedItem(dtmApproval.getValueAt(selectedRow, 1).toString());
                loadStaffToAttendance();
            } else {
                List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
                lbl_sub_contractor.setVisible(true);
                cmb_sub_contractor.setVisible(true);
                for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                    if (allLastAddedEmployee.getEmp_jobType_id() == 5) {
                        cmb_sub_contractor.addItem(allLastAddedEmployee.getEmp_id() + " : " + allLastAddedEmployee.getEmp_firstName() + " " + allLastAddedEmployee.getEmp_middleName() + " " + allLastAddedEmployee.getEmp_surName());
                    }
                }

                int subConId = Integer.parseInt(dtmApproval.getValueAt(selectedRow, 1).toString().split(" : ")[1]);

                for (int i = 1; i < cmb_sub_contractor.getItemCount(); i++) {
                    if (Integer.parseInt(cmb_sub_contractor.getItemAt(i).toString().split(" : ")[0]) == subConId) {
                        cmb_sub_contractor.setSelectedIndex(i);
                        break;
                    }
                }
                loadSubContractorStaffToAttendanceTable();
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAttApprovalTable() {
        dtmApproval.setRowCount(0);
        try {
            List<T_Attendance> allAttendances = attendanceController.getAllAttendances();
            Date attDate = null;
            int jobTypeID = 0;
            String empCat = "";

            for (T_Attendance allAttendance : allAttendances) {
                if (allAttendance.getAttendance_processed().equalsIgnoreCase("REQUESTED") && allAttendance.getAttendance_date() != attDate && allAttendance.getEmployeeCategory() != jobTypeID) {
                    if (allAttendance.getEmployeeCategory() != 2) {
                        empCat = jobTypeController.searchJobType(allAttendance.getEmployeeCategory()).getJobType_name();
                    } else {
                        List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
                        for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                            if (allAttendance.getAttendance_employeeId() == allLastAddedEmployee.getEmp_id()) {
                                empCat = jobTypeController.searchJobType(allLastAddedEmployee.getEmp_jobType_id()).getJobType_name() + " : " + allLastAddedEmployee.getEmp_subContractor_id();
                                break;
                            }
                        }
                    }
                    Object[] rowData = {allAttendance.getAttendance_date(), empCat};
                    dtmApproval.addRow(rowData);
                    attDate = allAttendance.getAttendance_date();
                    jobTypeID = allAttendance.getEmployeeCategory();
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Attendence_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
