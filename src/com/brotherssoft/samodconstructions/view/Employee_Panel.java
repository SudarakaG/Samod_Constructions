/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brotherssoft.samodconstructions.view;

import com.brotherssoft.samodconstructions.controller.M_EmployeeController;
import com.brotherssoft.samodconstructions.controller.M_Project_PrimaryController;
import com.brotherssoft.samodconstructions.controller.R_DesignationController;
import com.brotherssoft.samodconstructions.controller.R_JobTypeController;
import com.brotherssoft.samodconstructions.custom.IDGenerator;
import com.brotherssoft.samodconstructions.custom.Validation;
import com.brotherssoft.samodconstructions.model.M_Employee;
import com.brotherssoft.samodconstructions.model.M_Project_Primary;
import com.brotherssoft.samodconstructions.model.R_Designation;
import com.brotherssoft.samodconstructions.model.R_JobType;
import com.brotherssoft.samodconstructions.serverconnector.ServerConnector;
import java.awt.Color;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akvasoft
 */
public class Employee_Panel extends javax.swing.JPanel {

    R_JobTypeController jobTypeController;
    R_DesignationController designationController;
    M_EmployeeController employeeController;
    M_Project_PrimaryController projectController;
    DefaultTableModel dtmEmployee;
    public static int empIdPub;
    M_Employee employeeGlobal = null;

    /**
     * Creates new form Employee_Panel
     */
    public Employee_Panel() throws Exception {
        initComponents();
        date_picker_joinDate.setFormats("yyyy-MM-dd","yyyy/MM/dd");
        date_picker_birth.setFormats("yyyy-MM-dd","yyyy/MM/dd");
        
        lblSubContractor.setVisible(false);
        cmb_emp_subContractor.setVisible(false);
        cmb_searchEmp_subContractor.setVisible(false);

        Employee_Registration_Panel.setVisible(false);
        Employee_View_Panel.setVisible(true);

        jobTypeController = ServerConnector.getServerConnetor().getJobTypeController();
        designationController = ServerConnector.getServerConnetor().getDesignationController();
        employeeController = ServerConnector.getServerConnetor().getEmployeeController();
        projectController = ServerConnector.getServerConnetor().getPrimary_ProjectController();
        dtmEmployee = (DefaultTableModel) tbl_employeeInfo.getModel();

        loadJobTypeCombo();
        loadDesignationCombo();
        loadSiteCombo();
        loadEmployeeTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Employee_Registration_Panel = new javax.swing.JPanel();
        bank_panel_hedding3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        txt_Input_Panel_Branch2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmb_employee_title = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        txt_Initials = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txt_firt_name = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txt_Middle_Name = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        txt_sur_Name = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txt_address_no = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txt_address_street = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txt_Address_city = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        txt_address_country = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        date_picker_birth = new org.jdesktop.swingx.JXDatePicker();
        jLabel53 = new javax.swing.JLabel();
        txt_contact_1 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        txt_contact_2 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        txt_contact_3 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        cmb_emp_jobType = new javax.swing.JComboBox<>();
        cmb_emp_status = new javax.swing.JComboBox<>();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        cmb_emp_designation = new javax.swing.JComboBox<>();
        jLabel59 = new javax.swing.JLabel();
        date_picker_joinDate = new org.jdesktop.swingx.JXDatePicker();
        btn_emp_new = new javax.swing.JButton();
        btn_emp_save = new javax.swing.JButton();
        btn_emp_salary = new javax.swing.JButton();
        lblSubContractor = new javax.swing.JLabel();
        cmb_emp_subContractor = new javax.swing.JComboBox<>();
        jLabel58 = new javax.swing.JLabel();
        cmb_emp_site = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        Employee_View_Panel = new javax.swing.JPanel();
        bank_panel_hedding5 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        tbl_panel_Branch2 = new javax.swing.JPanel();
        btn_branch1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_employeeInfo = new javax.swing.JTable();
        txt_emp_search1 = new javax.swing.JTextField();
        cmb_searchEmp_jobType = new javax.swing.JComboBox<>();
        cmb_searchEmp_subContractor = new javax.swing.JComboBox<>();

        Employee_Registration_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Employee_Registration_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        bank_panel_hedding3.setBackground(new java.awt.Color(122, 72, 222));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 204, 255));
        jLabel24.setText("Administrations / System Management / Master Detail /");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 204, 204));
        jLabel28.setText("Employee Manager");

        javax.swing.GroupLayout bank_panel_hedding3Layout = new javax.swing.GroupLayout(bank_panel_hedding3);
        bank_panel_hedding3.setLayout(bank_panel_hedding3Layout);
        bank_panel_hedding3Layout.setHorizontalGroup(
            bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                .addGroup(bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        bank_panel_hedding3Layout.setVerticalGroup(
            bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        txt_Input_Panel_Branch2.setBackground(new java.awt.Color(255, 255, 255));
        txt_Input_Panel_Branch2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel31.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel31.setText("Title");

        cmb_employee_title.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_employee_title.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Mrs", "Ms", "Rev", "Dr", "Master" }));
        cmb_employee_title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_employee_titleActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel29.setText("Initials");

        txt_Initials.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_Initials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_InitialsActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel30.setText("Frist Name");

        txt_firt_name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_firt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_firt_nameActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel33.setText("Middle Name");

        txt_Middle_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_Middle_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_Middle_NameActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel47.setText("Last Name");

        txt_sur_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_sur_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sur_NameActionPerformed(evt);
            }
        });
        txt_sur_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_sur_NameKeyReleased(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel32.setText("Address No");

        txt_address_no.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_address_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_address_noActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel34.setText("Address Street");

        txt_address_street.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_address_street.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_address_streetActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel49.setText("Address City");

        txt_Address_city.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_Address_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_Address_cityActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel50.setText("Address Country");

        txt_address_country.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_address_country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_address_countryActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel51.setText("NIC");

        txt_nic.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nicActionPerformed(evt);
            }
        });
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nicKeyTyped(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel52.setText("Date of Birth");

        date_picker_birth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_picker_birthActionPerformed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel53.setText("Contact No 1");

        txt_contact_1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_contact_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contact_1ActionPerformed(evt);
            }
        });
        txt_contact_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_contact_1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_contact_1KeyReleased(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel54.setText("Contact No 2");

        txt_contact_2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_contact_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contact_2ActionPerformed(evt);
            }
        });
        txt_contact_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_contact_2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_contact_2KeyReleased(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel55.setText("Contact No 3");

        txt_contact_3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_contact_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contact_3ActionPerformed(evt);
            }
        });
        txt_contact_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_contact_3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_contact_3KeyReleased(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel48.setText("Job Type");

        cmb_emp_jobType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_emp_jobType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Job Type -" }));
        cmb_emp_jobType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_emp_jobTypeActionPerformed(evt);
            }
        });

        cmb_emp_status.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_emp_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        jLabel56.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel56.setText("Designation");

        jLabel57.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel57.setText("States");

        cmb_emp_designation.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_emp_designation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Designation -" }));
        cmb_emp_designation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmb_emp_designationMouseClicked(evt);
            }
        });
        cmb_emp_designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_emp_designationActionPerformed(evt);
            }
        });

        jLabel59.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel59.setText("Date of Join");

        date_picker_joinDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_picker_joinDateActionPerformed(evt);
            }
        });

        btn_emp_new.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_emp_new.setText("New");
        btn_emp_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_emp_newActionPerformed(evt);
            }
        });

        btn_emp_save.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_emp_save.setText("Save");
        btn_emp_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_emp_saveActionPerformed(evt);
            }
        });

        btn_emp_salary.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_emp_salary.setText("Salary");
        btn_emp_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_emp_salaryActionPerformed(evt);
            }
        });

        lblSubContractor.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblSubContractor.setText("Sub Contractor");

        cmb_emp_subContractor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_emp_subContractor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Sub Contractor -" }));
        cmb_emp_subContractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_emp_subContractorActionPerformed(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel58.setText("Site");

        cmb_emp_site.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_emp_site.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Allocated Site -" }));
        cmb_emp_site.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_emp_siteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txt_Input_Panel_Branch2Layout = new javax.swing.GroupLayout(txt_Input_Panel_Branch2);
        txt_Input_Panel_Branch2.setLayout(txt_Input_Panel_Branch2Layout);
        txt_Input_Panel_Branch2Layout.setHorizontalGroup(
            txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_sur_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(41, 41, 41)
                                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_firt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Middle_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmb_employee_title, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Initials, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_contact_3))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_contact_2))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_contact_1))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date_picker_birth, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nic))))
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_address_country, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Address_city, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_address_no, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(txt_address_street, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSubContractor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_emp_status, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_emp_designation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_emp_subContractor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_emp_jobType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date_picker_joinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_emp_site, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGap(0, 742, Short.MAX_VALUE)
                        .addComponent(btn_emp_save, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_emp_new, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_emp_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        txt_Input_Panel_Branch2Layout.setVerticalGroup(
            txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_employee_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Initials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_firt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Middle_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sur_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(date_picker_birth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_contact_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_contact_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_contact_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_address_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_address_street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Address_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_emp_jobType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_emp_subContractor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSubContractor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_emp_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_address_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmb_emp_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)))
                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_Input_Panel_Branch2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_emp_site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(date_picker_joinDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(txt_Input_Panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_emp_new, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_emp_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_emp_salary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("List of Employees");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Employee_Registration_PanelLayout = new javax.swing.GroupLayout(Employee_Registration_Panel);
        Employee_Registration_Panel.setLayout(Employee_Registration_PanelLayout);
        Employee_Registration_PanelLayout.setHorizontalGroup(
            Employee_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bank_panel_hedding3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Employee_Registration_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Employee_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Input_Panel_Branch2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Employee_Registration_PanelLayout.createSequentialGroup()
                        .addGap(0, 888, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Employee_Registration_PanelLayout.setVerticalGroup(
            Employee_Registration_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Employee_Registration_PanelLayout.createSequentialGroup()
                .addComponent(bank_panel_hedding3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Input_Panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );

        Employee_View_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Employee_View_Panel.setPreferredSize(new java.awt.Dimension(1050, 710));

        bank_panel_hedding5.setBackground(new java.awt.Color(122, 72, 222));

        jLabel60.setBackground(new java.awt.Color(255, 255, 255));
        jLabel60.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(204, 204, 255));
        jLabel60.setText("Administrations / System Management / Master Detail / Employee Manager");

        jLabel61.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(204, 204, 204));
        jLabel61.setText("Show All Employees");

        javax.swing.GroupLayout bank_panel_hedding5Layout = new javax.swing.GroupLayout(bank_panel_hedding5);
        bank_panel_hedding5.setLayout(bank_panel_hedding5Layout);
        bank_panel_hedding5Layout.setHorizontalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11)
                .addGap(155, 155, 155))
        );
        bank_panel_hedding5Layout.setVerticalGroup(
            bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bank_panel_hedding5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bank_panel_hedding5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel61)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tbl_panel_Branch2.setBackground(new java.awt.Color(255, 255, 255));
        tbl_panel_Branch2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Infomations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        btn_branch1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_branch1.setText("New Employee");
        btn_branch1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_branch1MouseClicked(evt);
            }
        });
        btn_branch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch1ActionPerformed(evt);
            }
        });

        tbl_employeeInfo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbl_employeeInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Employee Name", "NIC", "Job Type", "Designation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_employeeInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbl_employeeInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_employeeInfoMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_employeeInfo);

        txt_emp_search1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txt_emp_search1.setForeground(new java.awt.Color(102, 102, 102));
        txt_emp_search1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_emp_search1.setText("Search Employee");
        txt_emp_search1.setToolTipText("Use Bank Nname To Search !");
        txt_emp_search1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_emp_search1MouseClicked(evt);
            }
        });
        txt_emp_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_emp_search1KeyTyped(evt);
            }
        });

        cmb_searchEmp_jobType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Job Type -", "LOAD ALL" }));
        cmb_searchEmp_jobType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_searchEmp_jobTypeActionPerformed(evt);
            }
        });

        cmb_searchEmp_subContractor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Sub Contractor -" }));
        cmb_searchEmp_subContractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_searchEmp_subContractorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tbl_panel_Branch2Layout = new javax.swing.GroupLayout(tbl_panel_Branch2);
        tbl_panel_Branch2.setLayout(tbl_panel_Branch2Layout);
        tbl_panel_Branch2Layout.setHorizontalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
            .addGroup(tbl_panel_Branch2Layout.createSequentialGroup()
                .addComponent(btn_branch1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(cmb_searchEmp_jobType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(cmb_searchEmp_subContractor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_emp_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tbl_panel_Branch2Layout.setVerticalGroup(
            tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbl_panel_Branch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tbl_panel_Branch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_branch1)
                    .addComponent(cmb_searchEmp_jobType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_searchEmp_subContractor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_emp_search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout Employee_View_PanelLayout = new javax.swing.GroupLayout(Employee_View_Panel);
        Employee_View_Panel.setLayout(Employee_View_PanelLayout);
        Employee_View_PanelLayout.setHorizontalGroup(
            Employee_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Employee_View_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        Employee_View_PanelLayout.setVerticalGroup(
            Employee_View_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Employee_View_PanelLayout.createSequentialGroup()
                .addComponent(bank_panel_hedding5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(tbl_panel_Branch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(Employee_Registration_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Employee_View_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Employee_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Employee_Registration_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Employee_View_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Employee_Registration_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_branch1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_branch1MouseClicked
        Employee_View_Panel.setVisible(false);
        Employee_Registration_Panel.setVisible(true);
        cmb_searchEmp_jobType.setSelectedIndex(0);
        refreshFields();
    }//GEN-LAST:event_btn_branch1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        Employee_Registration_Panel.setVisible(false);
        Employee_View_Panel.setVisible(true);
        loadEmployeeTable();
    }//GEN-LAST:event_jButton4MouseClicked

    private void btn_emp_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_emp_saveActionPerformed
        if (btn_emp_save.getText().equalsIgnoreCase("Save")) {
            addEmployee();
        } else {
            updateEmployee();
        }
    }//GEN-LAST:event_btn_emp_saveActionPerformed

    private void btn_emp_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_emp_newActionPerformed
        refreshFields();
        try {
            employeeController.releaseEmployee(empIdPub);
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_emp_newActionPerformed

    private void btn_branch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_branch1ActionPerformed

    private void tbl_employeeInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_employeeInfoMouseClicked
        cmb_searchEmp_jobType.setSelectedIndex(0);
        getDataFromTable(searchFromTableNIC());
        txt_emp_search1.setText("Search Employee");
        txt_emp_search1.setForeground(Color.GRAY);
    }//GEN-LAST:event_tbl_employeeInfoMouseClicked

    private void btn_emp_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_emp_salaryActionPerformed
        try {
            if (!txt_nic.getText().equalsIgnoreCase("")) {
                Employee_Salary employee_Salary = new Employee_Salary(txt_nic.getText());
                GUI_Home.load_panel.repaint();
                GUI_Home.load_panel.revalidate();
                employee_Salary.setSize(GUI_Home.load_panel.getSize());
                GUI_Home.load_panel.add(employee_Salary);
                employee_Salary.setVisible(true);
                this.setVisible(false);
            } else {
                Employee_Salary employee_Salary = new Employee_Salary();
                GUI_Home.load_panel.repaint();
                GUI_Home.load_panel.revalidate();
                employee_Salary.setSize(GUI_Home.load_panel.getSize());
                GUI_Home.load_panel.add(employee_Salary);
                employee_Salary.setVisible(true);
                this.setVisible(false);
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_emp_salaryActionPerformed

    private void cmb_emp_jobTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_emp_jobTypeActionPerformed
        if (cmb_emp_jobType.getSelectedItem().toString().equalsIgnoreCase("Sub contractor staff")) {
            try {
                lblSubContractor.setVisible(true);
                cmb_emp_subContractor.setVisible(true);

                for (int i = 1; i < cmb_emp_subContractor.getItemCount(); i++) {
                    cmb_emp_subContractor.removeItemAt(i);
                }

                List<M_Employee> allEmployees = employeeController.getAllLastAddedEmployees();
                for (M_Employee allEmployee : allEmployees) {
                    if (allEmployee.getEmp_jobType_id() == 5) {
                        cmb_emp_subContractor.addItem(allEmployee.getEmp_firstName());
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
            cmb_emp_subContractor.requestFocus();
        } else {
            lblSubContractor.setVisible(false);
            cmb_emp_subContractor.setVisible(false);
            cmb_emp_designation.requestFocus();
        }
    }//GEN-LAST:event_cmb_emp_jobTypeActionPerformed

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        Validation.textNIC(txt_nic);
    }//GEN-LAST:event_txt_nicKeyPressed

    private void txt_nicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyTyped
    }//GEN-LAST:event_txt_nicKeyTyped

    private void txt_nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyReleased
        Validation.textNIC(txt_nic);
        try {
            M_Employee searchEmployeeByNIC = employeeController.searchEmployeeByNIC(txt_nic.getText());
            if (searchEmployeeByNIC != null) {
                JOptionPane.showMessageDialog(this, "An Employee Already Registered on this NIC..");
                getDataFromTable(searchEmployeeByNIC);
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txt_nicKeyReleased

    private void txt_contact_1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_1KeyPressed
        Validation.phoneNumber(txt_contact_1, evt);
    }//GEN-LAST:event_txt_contact_1KeyPressed

    private void txt_contact_1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_1KeyReleased
        Validation.phoneNumber(txt_contact_1, evt);
    }//GEN-LAST:event_txt_contact_1KeyReleased

    private void txt_contact_2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_2KeyPressed
        Validation.phoneNumber(txt_contact_2, evt);
    }//GEN-LAST:event_txt_contact_2KeyPressed

    private void txt_contact_2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_2KeyReleased
        Validation.phoneNumber(txt_contact_2, evt);
    }//GEN-LAST:event_txt_contact_2KeyReleased

    private void txt_contact_3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_3KeyPressed
        Validation.phoneNumber(txt_contact_3, evt);
    }//GEN-LAST:event_txt_contact_3KeyPressed

    private void txt_contact_3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact_3KeyReleased
        Validation.phoneNumber(txt_contact_3, evt);
    }//GEN-LAST:event_txt_contact_3KeyReleased

    private void cmb_searchEmp_jobTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_searchEmp_jobTypeActionPerformed
        if (cmb_searchEmp_jobType.getSelectedIndex() != 0) {
            try {
                List<M_Employee> allEmployees = employeeController.getAllLastAddedEmployees();
                if (cmb_searchEmp_jobType.getSelectedItem().toString().equalsIgnoreCase("Sub contractor staff")) {

                    cmb_searchEmp_subContractor.setVisible(true);

                    for (int i = 1; i < cmb_searchEmp_subContractor.getItemCount(); i++) {
                        cmb_searchEmp_subContractor.removeItemAt(i);
                    }

                    for (M_Employee allEmployee : allEmployees) {
                        if (allEmployee.getEmp_jobType_id() == 5) {
                            cmb_searchEmp_subContractor.addItem(allEmployee.getEmp_firstName());
                        }
                    }

                } else {
                    if (cmb_searchEmp_jobType.getSelectedIndex() == 1) {
                        cmb_searchEmp_subContractor.setVisible(false);
                        dtmEmployee.setRowCount(0);
                        for (M_Employee allEmployee : allEmployees) {
                            String[] rowData = {allEmployee.getEmp_initials() + "  " + allEmployee.getEmp_firstName(), allEmployee.getEmp_NIC(), jobTypeController.searchJobType(allEmployee.getEmp_jobType_id()).getJobType_name(), designationController.searchDesignation(allEmployee.getEmp_designation_id()).getDesignation_name()};
                            dtmEmployee.addRow(rowData);
                        }
                    } else {
                        cmb_searchEmp_subContractor.setVisible(false);
                        dtmEmployee.setRowCount(0);
                        for (M_Employee allEmployee : allEmployees) {
                            if (jobTypeController.searchJobType(cmb_searchEmp_jobType.getSelectedItem().toString()).getJobType_id() == allEmployee.getEmp_jobType_id()) {

                                String[] rowData = {allEmployee.getEmp_initials() + "  " + allEmployee.getEmp_firstName(), allEmployee.getEmp_NIC(), jobTypeController.searchJobType(allEmployee.getEmp_jobType_id()).getJobType_name(), designationController.searchDesignation(allEmployee.getEmp_designation_id()).getDesignation_name()};
                                dtmEmployee.addRow(rowData);

                            }
                        }
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmb_searchEmp_jobTypeActionPerformed

    private void cmb_searchEmp_subContractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_searchEmp_subContractorActionPerformed
        try {
            if (cmb_searchEmp_subContractor.getSelectedIndex() != 0) {
                dtmEmployee.setRowCount(0);
                List<M_Employee> allEmployees = employeeController.getAllLastAddedEmployees();
                for (M_Employee allEmployee : allEmployees) {
                    if (allEmployee.getEmp_subContractor_id() == employeeController.searchEmployee(cmb_searchEmp_subContractor.getSelectedItem().toString()).getEmp_id()) {
                        String[] rowData = {allEmployee.getEmp_initials() + "  " + allEmployee.getEmp_firstName(), allEmployee.getEmp_NIC(), jobTypeController.searchJobType(allEmployee.getEmp_jobType_id()).getJobType_name(), designationController.searchDesignation(allEmployee.getEmp_designation_id()).getDesignation_name()};
                        dtmEmployee.addRow(rowData);
                    }
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmb_searchEmp_subContractorActionPerformed

    private void txt_emp_search1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyTyped

    }//GEN-LAST:event_txt_emp_search1KeyTyped

    private void txt_emp_search1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyPressed

    }//GEN-LAST:event_txt_emp_search1KeyPressed

    private void txt_emp_search1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_emp_search1MouseClicked
        txt_emp_search1.setText("");
        txt_emp_search1.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_emp_search1MouseClicked

    private void txt_emp_search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_search1KeyReleased
        try {
            dtmEmployee.setRowCount(0);
            List<M_Employee> allEmployeesByLetter = employeeController.getAllEmployeesByLetter(txt_emp_search1.getText());
            for (M_Employee m_Employee : allEmployeesByLetter) {
                String[] rowData = {m_Employee.getEmp_initials() + "  " + m_Employee.getEmp_firstName(), m_Employee.getEmp_NIC(), jobTypeController.searchJobType(m_Employee.getEmp_jobType_id()).getJobType_name(), designationController.searchDesignation(m_Employee.getEmp_designation_id()).getDesignation_name()};
                dtmEmployee.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txt_emp_search1KeyReleased

    private void txt_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nicActionPerformed
        date_picker_birth.requestFocus();
    }//GEN-LAST:event_txt_nicActionPerformed

    private void cmb_employee_titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_employee_titleActionPerformed
        txt_Initials.requestFocus();
    }//GEN-LAST:event_cmb_employee_titleActionPerformed

    private void txt_InitialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_InitialsActionPerformed
        txt_firt_name.requestFocus();
    }//GEN-LAST:event_txt_InitialsActionPerformed

    private void txt_firt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_firt_nameActionPerformed
        txt_Middle_Name.requestFocus();
    }//GEN-LAST:event_txt_firt_nameActionPerformed

    private void txt_Middle_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_Middle_NameActionPerformed
        txt_sur_Name.requestFocus();
    }//GEN-LAST:event_txt_Middle_NameActionPerformed

    private void txt_sur_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sur_NameActionPerformed
        txt_address_no.requestFocus();
    }//GEN-LAST:event_txt_sur_NameActionPerformed

    private void txt_address_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_address_noActionPerformed
        txt_address_street.requestFocus();
    }//GEN-LAST:event_txt_address_noActionPerformed

    private void txt_address_streetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_address_streetActionPerformed
        txt_Address_city.requestFocus();
    }//GEN-LAST:event_txt_address_streetActionPerformed

    private void txt_Address_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_Address_cityActionPerformed
        txt_address_country.requestFocus();
    }//GEN-LAST:event_txt_Address_cityActionPerformed

    private void txt_address_countryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_address_countryActionPerformed
        date_picker_joinDate.requestFocus();
    }//GEN-LAST:event_txt_address_countryActionPerformed

    private void date_picker_joinDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_picker_joinDateActionPerformed
        txt_nic.requestFocus();
    }//GEN-LAST:event_date_picker_joinDateActionPerformed

    private void txt_sur_NameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sur_NameKeyReleased
        try {
            M_Employee searchByFullName = employeeController.searchByFullName(txt_firt_name.getText(), txt_Middle_Name.getText(), txt_sur_Name.getText());
            if (searchByFullName != null) {
                JOptionPane.showMessageDialog(this, "An Employee Registered from this Name.. \n" + searchByFullName.getEmp_firstName() + "  " + searchByFullName.getEmp_middleName() + "  " + searchByFullName.getEmp_surName());
                getDataFromTable(searchByFullName);
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txt_sur_NameKeyReleased

    private void date_picker_birthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_picker_birthActionPerformed
        txt_contact_1.requestFocus();
    }//GEN-LAST:event_date_picker_birthActionPerformed

    private void txt_contact_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contact_1ActionPerformed
        txt_contact_2.requestFocus();
    }//GEN-LAST:event_txt_contact_1ActionPerformed

    private void txt_contact_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contact_2ActionPerformed
        txt_contact_3.requestFocus();
    }//GEN-LAST:event_txt_contact_2ActionPerformed

    private void txt_contact_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contact_3ActionPerformed
        cmb_emp_jobType.requestFocus();
    }//GEN-LAST:event_txt_contact_3ActionPerformed

    private void cmb_emp_subContractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_emp_subContractorActionPerformed
        cmb_emp_designation.requestFocus();
    }//GEN-LAST:event_cmb_emp_subContractorActionPerformed

    private void cmb_emp_designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_emp_designationActionPerformed
        cmb_emp_status.requestFocus();
    }//GEN-LAST:event_cmb_emp_designationActionPerformed

    private void cmb_emp_designationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_emp_designationMouseClicked
        if (cmb_emp_jobType.getSelectedItem().toString().equalsIgnoreCase("Sub Contractor Staff") && cmb_emp_subContractor.getSelectedIndex() == 0) {
            cmb_emp_designation.getUI().setPopupVisible(cmb_emp_designation, false);
            JOptionPane.showMessageDialog(this, "Please Select the Sub Contractor Name");
        }
    }//GEN-LAST:event_cmb_emp_designationMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        loadEmployeeTable();
        try {
            employeeController.releaseEmployee(empIdPub);
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmb_emp_siteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_emp_siteActionPerformed
        if (cmb_emp_site.getSelectedIndex() != 0 && employeeGlobal != null) {
            try {
                int projectId = projectController.searchPrimaryProjectByName(cmb_emp_site.getSelectedItem().toString()).getProject_id();
                int empSiteId = employeeGlobal.getEmp_site_id();
                if (empSiteId != projectId) {
                    btn_emp_save.setText("Save");
                }else{
                    btn_emp_save.setText("Update");
                }
            } catch (Exception ex) {
                Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_cmb_emp_siteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Employee_Registration_Panel;
    private javax.swing.JPanel Employee_View_Panel;
    private javax.swing.JPanel bank_panel_hedding3;
    private javax.swing.JPanel bank_panel_hedding5;
    private javax.swing.JButton btn_branch1;
    private javax.swing.JButton btn_emp_new;
    private javax.swing.JButton btn_emp_salary;
    private javax.swing.JButton btn_emp_save;
    private javax.swing.JComboBox<String> cmb_emp_designation;
    private javax.swing.JComboBox<String> cmb_emp_jobType;
    private javax.swing.JComboBox<String> cmb_emp_site;
    private javax.swing.JComboBox<String> cmb_emp_status;
    private javax.swing.JComboBox<String> cmb_emp_subContractor;
    private javax.swing.JComboBox<String> cmb_employee_title;
    private javax.swing.JComboBox<String> cmb_searchEmp_jobType;
    private javax.swing.JComboBox<String> cmb_searchEmp_subContractor;
    private org.jdesktop.swingx.JXDatePicker date_picker_birth;
    private org.jdesktop.swingx.JXDatePicker date_picker_joinDate;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblSubContractor;
    private javax.swing.JTable tbl_employeeInfo;
    private javax.swing.JPanel tbl_panel_Branch2;
    private javax.swing.JTextField txt_Address_city;
    private javax.swing.JTextField txt_Initials;
    private javax.swing.JPanel txt_Input_Panel_Branch2;
    private javax.swing.JTextField txt_Middle_Name;
    private javax.swing.JTextField txt_address_country;
    private javax.swing.JTextField txt_address_no;
    private javax.swing.JTextField txt_address_street;
    private javax.swing.JTextField txt_contact_1;
    private javax.swing.JTextField txt_contact_2;
    private javax.swing.JTextField txt_contact_3;
    private javax.swing.JTextField txt_emp_search1;
    private javax.swing.JTextField txt_firt_name;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_sur_Name;
    // End of variables declaration//GEN-END:variables

    private void addEmployee() {
        if (cmb_emp_jobType.getSelectedIndex() != 0 && cmb_emp_designation.getSelectedIndex() != 0) {
            try {

                int empId = IDGenerator.getNewID("m_emp", "EMP_ID");
                String empTitle = Integer.toString(cmb_employee_title.getSelectedIndex());
                String empInitials = txt_Initials.getText();
                String firstName = txt_firt_name.getText();
                String middleName = txt_Middle_Name.getText();
                String lastNAme = txt_sur_Name.getText();
                String address1 = txt_address_no.getText();
                String address2 = txt_address_street.getText();
                String address3 = txt_Address_city.getText();
                String address4 = txt_address_country.getText();
                Date joinDate = date_picker_joinDate.getDate();
                String nic = txt_nic.getText();
                Date birthDay = date_picker_birth.getDate();
                String contact1 = txt_contact_1.getText();
                String contact2 = txt_contact_2.getText();
                String contact3 = txt_contact_3.getText();
                int jobTypeId = jobTypeController.searchJobType(cmb_emp_jobType.getSelectedItem().toString()).getJobType_id();
                int destinationId = designationController.searchDesignation(cmb_emp_designation.getSelectedItem().toString()).getDesignation_id();
                String status = Integer.toString(cmb_emp_status.getSelectedIndex());
                int subContractorId = 0;
                if (cmb_emp_subContractor.getSelectedIndex() != 0) {
                    subContractorId = employeeController.searchEmployee(cmb_emp_subContractor.getSelectedItem().toString()).getEmp_id();
                } else {
                    subContractorId = 0;
                }
                int siteId = 0;
                if (cmb_emp_site.getSelectedIndex() != 0) {
                    siteId = projectController.searchPrimaryProjectByName(cmb_emp_site.getSelectedItem().toString()).getProject_id();
                }
                
                M_Employee employee = null;
                if (employeeGlobal != null && siteId != employeeGlobal.getEmp_site_id()) {
                    employee = new M_Employee(empId, empTitle, empInitials, firstName, middleName, lastNAme, address1, address2, address3, address4, nic, birthDay, contact1, contact2, contact3, employeeGlobal.getEmp_accountNo(), employeeGlobal.getEmp_bank_id(), employeeGlobal.getEmp_branch_id(), destinationId, employeeGlobal.getEmp_salaryType_id(), employeeGlobal.getEmp_salary(), employeeGlobal.getEmp_otherAllowance1(), employeeGlobal.getEmp_otherAllowance2(), siteId, status, employeeGlobal.getEmp_epf_status(), jobTypeId, joinDate, subContractorId, employeeGlobal.getEmp_otherAllowance3(), employeeGlobal.getEmp_otherAllowance4());                    
                }else{
                    employee = new M_Employee(empId, empTitle, empInitials, firstName, middleName, lastNAme, address1, address2, address3, address4, nic, birthDay, contact1, contact2, contact3, null, 0, 0, destinationId, 0, 0, 0, 0, siteId, status, null, jobTypeId, joinDate, subContractorId, 0, 0);
                }                
                
                boolean addEmployee = employeeController.addEmployee(employee);
                if (addEmployee) {
                    JOptionPane.showMessageDialog(this, "Employee Details Added Successfully..");
                } else {
                    JOptionPane.showMessageDialog(this, "Adding Employee Details Failed..");
                }

            } catch (Exception ex) {
                Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select the Job Type & Designation");
        }

    }

    private void loadJobTypeCombo() {
        try {

            List<R_JobType> allJobTypes = jobTypeController.getAllJobTypes();
            cmb_emp_jobType.removeAll();
            for (R_JobType allJobType : allJobTypes) {
                cmb_emp_jobType.addItem(allJobType.getJobType_name());
                cmb_searchEmp_jobType.addItem(allJobType.getJobType_name());
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDesignationCombo() {
        try {

            List<R_Designation> allDesignations = designationController.getAllDesignations();
            cmb_emp_designation.removeAll();
            for (R_Designation allDesignation : allDesignations) {
                cmb_emp_designation.addItem(allDesignation.getDesignation_name());
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadEmployeeTable() {
        try {

            dtmEmployee.setRowCount(0);
            List<M_Employee> allEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allEmployee : allEmployees) {

                String jobType = jobTypeController.searchJobType(allEmployee.getEmp_jobType_id()).getJobType_name();
                String designation = designationController.searchDesignation(allEmployee.getEmp_designation_id()).getDesignation_name();

                String[] rowData = {allEmployee.getEmp_initials() + "  " + allEmployee.getEmp_firstName(), allEmployee.getEmp_NIC(), jobType, designation};
                dtmEmployee.addRow(rowData);
            }

        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getDataFromTable(M_Employee employee) {
        refreshFields();
        try {
            if (employeeController.reserveEmployee(employee.getEmp_id())) {
                cmb_employee_title.setSelectedIndex(Integer.parseInt(employee.getEmp_title()));
                txt_Initials.setText(employee.getEmp_initials());
                txt_firt_name.setText(employee.getEmp_firstName());
                txt_Middle_Name.setText(employee.getEmp_middleName());
                txt_sur_Name.setText(employee.getEmp_surName());
                txt_address_no.setText(employee.getEmp_address1());
                txt_address_street.setText(employee.getEmp_address2());
                txt_Address_city.setText(employee.getEmp_address3());
                txt_address_country.setText(employee.getEmp_address4());
                date_picker_joinDate.setDate(employee.getEmp_joinDate());
                txt_nic.setText(employee.getEmp_NIC());
                date_picker_birth.setDate(employee.getEmp_DOB());
                txt_contact_1.setText(employee.getEmp_contact1());
                txt_contact_2.setText(employee.getEmp_contact2());
                txt_contact_3.setText(employee.getEmp_contatct3());
                cmb_emp_jobType.setSelectedItem(jobTypeController.searchJobType(employee.getEmp_jobType_id()).getJobType_name());
                cmb_emp_designation.setSelectedItem(designationController.searchDesignation(employee.getEmp_designation_id()).getDesignation_name());
                if (employee.getEmp_site_id() != 0) {
                    cmb_emp_site.setSelectedItem(projectController.searchPrimaryProject(employee.getEmp_site_id()).getProject_primary_name());
                }
                cmb_emp_status.setSelectedIndex(Integer.parseInt(employee.getEmp_status()));
                if (cmb_emp_jobType.getSelectedItem().toString().equalsIgnoreCase("Sub contractor staff")) {
                    cmb_emp_subContractor.setSelectedItem(employeeController.searchEmployee(employee.getEmp_subContractor_id()).getEmp_firstName());
                }
            } else {
                JOptionPane.showMessageDialog(this, "This Employee is Already Using by Another Machine.. Try Again in a Moment.");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }

        Employee_Registration_Panel.setVisible(true);
        Employee_View_Panel.setVisible(false);
        btn_emp_save.setText("Update");
    }

    private M_Employee searchFromTableNIC() {
        int selectedRow = tbl_employeeInfo.getSelectedRow();
        String nic = (String) dtmEmployee.getValueAt(selectedRow, 1);

        M_Employee employee = null;
        try {
            List<M_Employee> allLastAddedEmployees = employeeController.getAllLastAddedEmployees();
            for (M_Employee allLastAddedEmployee : allLastAddedEmployees) {
                if (allLastAddedEmployee.getEmp_NIC().equalsIgnoreCase(nic)) {
                    employee = allLastAddedEmployee;
                    employeeGlobal = allLastAddedEmployee;
                    break;
                }
            }
            if (empIdPub != employee.getEmp_id()) {
                employeeController.releaseEmployee(empIdPub);
            }
            empIdPub = employee.getEmp_id();
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return employee;
    }

    private void updateEmployee() {
        if (cmb_emp_jobType.getSelectedIndex() != 0 && cmb_emp_designation.getSelectedIndex() != 0) {
            try {

                int empId = searchFromTableNIC().getEmp_id();
                String empTitle = Integer.toString(cmb_employee_title.getSelectedIndex());
                String empInitials = txt_Initials.getText();
                String firstName = txt_firt_name.getText();
                String middleName = txt_Middle_Name.getText();
                String lastNAme = txt_sur_Name.getText();
                String address1 = txt_address_no.getText();
                String address2 = txt_address_street.getText();
                String address3 = txt_Address_city.getText();
                String address4 = txt_address_country.getText();
                Date joinDate = date_picker_joinDate.getDate();
                String nic = txt_nic.getText();
                Date birthDay = date_picker_birth.getDate();
                String contact1 = txt_contact_1.getText();
                String contact2 = txt_contact_2.getText();
                String contact3 = txt_contact_3.getText();
                int jobTypeId = jobTypeController.searchJobType(cmb_emp_jobType.getSelectedItem().toString()).getJobType_id();
                int destinationId = designationController.searchDesignation(cmb_emp_designation.getSelectedItem().toString()).getDesignation_id();
                String status = Integer.toString(cmb_emp_status.getSelectedIndex());
                int subContractorId = 0;
                if (cmb_emp_subContractor.getSelectedIndex() != 0) {
                    subContractorId = employeeController.searchEmployee(cmb_emp_subContractor.getSelectedItem().toString()).getEmp_id();
                } else {
                    subContractorId = 0;
                }
                int siteId = 0;
                if (cmb_emp_site.getSelectedIndex() != 0) {
                    siteId = projectController.searchPrimaryProjectByName(cmb_emp_site.getSelectedItem().toString()).getProject_id();
                }

                M_Employee employee = new M_Employee(empId, empTitle, empInitials, firstName, middleName, lastNAme, address1, address2, address3, address4, nic, birthDay, contact1, contact2, contact3, null, 0, 0, destinationId, 0, 0, 0, 0, siteId, status, null, jobTypeId, joinDate, subContractorId, 0, 0);
                boolean updateEmployee = employeeController.updateEmployee(employee);
                if (updateEmployee) {
                    JOptionPane.showMessageDialog(this, "Employee Details Updated Successfully..");
                } else {
                    JOptionPane.showMessageDialog(this, "Updating Employee Details Failed..");
                }

            } catch (Exception ex) {
                Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select the Job Type & Designation");
        }
    }

    private void refreshFields() {
        Date date = new Date();
        cmb_employee_title.setSelectedIndex(0);
        txt_Initials.setText("");
        txt_firt_name.setText("");
        txt_Middle_Name.setText("");
        txt_sur_Name.setText("");
        txt_address_no.setText("");
        txt_address_street.setText("");
        txt_Address_city.setText("");
        txt_address_country.setText("");
        date_picker_joinDate.setDate(date);
        txt_nic.setText("");
        date_picker_birth.setDate(date);
        txt_contact_1.setText("");
        txt_contact_2.setText("");
        txt_contact_3.setText("");
        cmb_emp_jobType.setSelectedIndex(0);
        cmb_emp_designation.setSelectedIndex(0);
        cmb_emp_status.setSelectedIndex(0);
        btn_emp_save.setText("Save");
        cmb_employee_title.requestFocus();
        cmb_emp_site.setSelectedIndex(0);
    }

    private void loadSiteCombo() {
        cmb_emp_site.removeAll();
        try {
            List<M_Project_Primary> allPrimaryProjects = projectController.getAllPrimaryProjects();
            for (M_Project_Primary allPrimaryProject : allPrimaryProjects) {
                cmb_emp_site.addItem(allPrimaryProject.getProject_primary_name());
            }
        } catch (Exception ex) {
            Logger.getLogger(Employee_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
